{
    "openapi": "3.1.0",
    "info": {
        "title": "Trata AI API",
        "description": "Human like conversation to answer calls, drive engagement, automate follow-ups & schedule bookings 24/7  with end to end integrations ensuring you never miss a sales enquiry.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.trata.ai",
            "description": "Production"
        },
        {
            "url": "http://localhost:8000",
            "description": "Development"
        }
    ],
    "paths": {
        "/v1/metrics": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get Metrics",
                "description": "Get fine grained analytics data from Trata AI like call, duration stats, etc.",
                "operationId": "getMetrics_v1_metrics_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BatchMetricsRequests"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BatchMetricsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v1/stats": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get Aggregated Stats",
                "description": "Get aggregated stats from Trata AI like call count, prospect count, etc.",
                "operationId": "getOverallStats_v1_stats_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatsResponse"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v1/prospects": {
            "post": {
                "tags": [
                    "Prospects"
                ],
                "summary": "Create a New Prospect",
                "description": "Create a New Prospect",
                "operationId": "createProspectV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Prospect-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Prospect created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Prospect-Output"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "name": "Hari",
                                    "phoneNumber": "96260-12778",
                                    "externalReference": [],
                                    "status": "SERVICE_ORDER_PLACED",
                                    "prospectProps": {},
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Prospects"
                ],
                "summary": "List All Prospects",
                "description": "List All Prospects",
                "operationId": "listProspectsV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field name to search by",
                            "title": "Search By"
                        },
                        "description": "Field name to search by",
                        "example": "name"
                    },
                    {
                        "name": "search_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Value to search for in the specified field",
                            "title": "Search Value"
                        },
                        "description": "Value to search for in the specified field",
                        "example": "search term"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status",
                        "example": "active"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field to sort by",
                            "title": "Sort By"
                        },
                        "description": "Field to sort by",
                        "example": "createdAt"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SortOrder"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sort order (asc or desc)",
                            "default": "asc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order (asc or desc)"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of prospects retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Prospect-Output"
                                    },
                                    "title": "Response Listprospectsv1"
                                },
                                "example": [
                                    {
                                        "id": "pro.1731301754.OZSMSU1S",
                                        "orgId": "org.1726902940.GZChqlpU",
                                        "name": "Hari",
                                        "phoneNumber": "96260-12778",
                                        "externalReference": [],
                                        "status": "SERVICE_ORDER_PLACED",
                                        "prospectProps": {},
                                        "createdBy": "trata-system",
                                        "createdAt": "2024-11-11T05:09:14.979287",
                                        "updatedBy": "trata-system",
                                        "updatedAt": "2024-11-11T05:09:14.979289"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/prospects/{prospect_id}": {
            "get": {
                "tags": [
                    "Prospects"
                ],
                "summary": "Get a Specific Prospect by ID",
                "description": "Get a Specific Prospect by ID",
                "operationId": "getProspectV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "prospect_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the prospect",
                            "title": "Prospect Id"
                        },
                        "description": "ID of the prospect"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prospect retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Prospect-Output"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "name": "Hari",
                                    "phoneNumber": "96260-12778",
                                    "externalReference": [],
                                    "status": "SERVICE_ORDER_PLACED",
                                    "prospectProps": {},
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Prospects"
                ],
                "summary": "Update a Specific Prospect by ID",
                "description": "Update a Specific Prospect by ID",
                "operationId": "updateProspectV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "prospect_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the prospect",
                            "title": "Prospect Id"
                        },
                        "description": "ID of the prospect"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Prospect-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Prospect updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Prospect-Output"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "name": "Hari",
                                    "phoneNumber": "96260-12778",
                                    "externalReference": [],
                                    "status": "SERVICE_ORDER_PLACED",
                                    "prospectProps": {},
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Prospects"
                ],
                "summary": "Delete a Specific Prospect by ID",
                "description": "Delete a Specific Prospect by ID",
                "operationId": "deleteProspectV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "prospect_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the prospect",
                            "title": "Prospect Id"
                        },
                        "description": "ID of the prospect"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prospect deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ai-agents": {
            "post": {
                "tags": [
                    "Agents"
                ],
                "summary": "Create a New AI Agent",
                "description": "Create a New AI Agent",
                "operationId": "createAIAgentV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AI Agent created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent-Output"
                                },
                                "example": {
                                    "id": "aia.1726903132.obUuT7vM",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "name": "Sophia",
                                    "imageUrl": "https://lh3.googleusercontent.com/d/1O_8YXKk1lVOuo8EwFOW7VRdLKwdVrkNi=w1000?authuser=1/view",
                                    "mission": {
                                        "prompt": "You are an AI voice receptionist/agent for a restaurant. Your task is to engage in a human-like conversation with a caller/user/guest/customer, responding naturally and appropriately based on the conversation transcript and additional context provided.\nNever forget your name is {name}. You work as a {role} and as part of your work, you perform these {roleDescription}.\n            You work at a restaurant named {company_name}.\n            Your mission is to identify caller/user/guest/customer\u2019s requests and build strong relationships with them. You should maintain a positive attitude throughout the conversation and help the caller/user/guest/customer with the request.\nFor any other request made beyond the {roleDescription}, politely respond stating \u201cIt's beyond my context and role, but I can arrange a call back shortly. Can I have your name and the best number to reach\u201d\nIf the caller/customer asks for more information to be sent on their email, politely entertain that and request their email and best number to reach. Mention \"Someone from our team will revert shortly with the details you requested\". For table reservation always ask for date, time for the reservation. Also if they have any special requests.\nIf the caller/customer confirms the date and time for the table reservation or any other request, ask them to share their name and number first. For food delivery, ask for the name, number, and delivery address.\nIf the caller/customer asks for any information to be shared over an email, say \"Absolutely, what's your best email so we can share the info\"?\n            Follow conversation etiquettes:\n                1. When caller/user/guest/customer says \"hold on\" or \"let me complete\", you should respond with \"Sure, please go ahead\".\n                2. Keep your responses in short length to retain the caller/user/guest/customer\u2019s attention.\n                3. If the input question is not clear or incomplete, ask the user a clarification question, and give hints so that user can form a better question\n                4. Check your previous responses from the conversation history section and don't repeat the same sentences in your new responses. It will make users to lose interest.\nGuidelines for interaction:\n1. Always maintain a polite and friendly tone.\n2. Use the restaurant information provided to accurately answer questions.\n3. If you don't have specific information, politely inform the caller and offer to find out or connect them with someone who can help.\n4. For reservations, always confirm the date, time, number of guests, and any special requirements.\n5. When sharing menu information, be prepared to describe dishes, answer questions about ingredients, and mention any daily specials.\n6. For event bookings, gather all necessary details including the type of event, number of guests, preferred date and time, and any specific requirements.\n7. When handling food orders, confirm each item, ask about any customizations or dietary restrictions, and provide clear information about delivery times or pickup options.\n8. For special requests, listen carefully and try to accommodate if possible. If a request can't be fulfilled, offer alternatives.\nHandling objections and special situations:\n1. If a desired reservation time is not available, offer alternative times or dates.\n2. If a menu item is unavailable, apologize and suggest similar dishes.\n3. If there's a complaint, listen empathetically, apologize sincerely, and offer to address the issue or connect the caller with a manager if necessary.\n4. For any request you can't fulfill immediately, offer to take a message or have someone call back with more information.\nRemember to respond naturally, as if you were a human receptionist. Avoid using robotic or overly formal language. Use conversational phrases and show empathy where appropriate.\n            Your conversation can be in one of these stages in no particular order\n            # START OF STAGE DETAILS\n            {sequences}\n            # END OF STAGE DETAILS\n            Respond according to the stage of the conversation you are at. Dont use emojis or any emoticons in your response as your service is going to be rendered as a speech from a text-to-speech service.\n            This is your current conversation history with user, use this conversation history while generating response\n            # START OF CONVERSATION HISTORY\n            {conversation_history}\n            # END OF CONVERSATION HISTORY\n            Also these CONTEXT contains relevant information to answer user's query. Use this context to generate response\n            # START OF CONTEXT\n            {context}\n            # END OF CONTEXT\n\"Do not mention the price unless the caller asks\"\n\"If the customer/caller asks, are these vegan dishes? respond, yes we do have vegan options\"\n            Keep your responses always in the context of sales and support for the {company_name}.\n            Convey a confident tone, using direct and decisive language.\n            IMPORTANT: End each response with a probing question or a prompt that directs the user towards one of your objectives. Keep your responses in two or fewer short sentences.\n            Example Endings:\n            \"Would you like to proceed with a table reservation?\"\n            \"Shall I go ahead and place that order for you?\"\n            \"Is there anything else you'd like to know about our services?\"\n            Now, generate a response for the user question: {question}\nBe polite and respectful while keeping the tone of the conversation professional. Your greeting should be welcoming. Always clarify in your greeting the reason why you are calling\n Needs analysis: Ask open-ended questions to understand whether its a table reservation or order booking or general enquiry of the hotel. Listen carefully. Don't over-confirm or clarify else the caller will be frustrated and cut the call.\n Solution presentation: Based on the needs of the request, present your solution which also adheres to your responsibilities.\n End conversation: Thank the customer for their time and confirm the next steps.\nAlso, before ending the call mention \"you will receive a confirmation text shortly for your table reservation or food delivery\" as applicable. If there are no more additional requests, say bye and end the call.",
                                        "greeting": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                        "farewell": "Thanks for calling us, you have a great one! Bye"
                                    },
                                    "role": "Restuarant Receptionist",
                                    "roleDescription": "As a Restaurant Receptionist, your primary roles are as follows:\n1. Table Reservation by the guests - you are responsible for taking table reservation requests which involves asking guests or customers for their preferred date and time for visiting the restaurant, along with the total number of guests accompanying for the table reservation. During the call, confirm the reservation. Upon confirmation, convey that the table is reserved for the specific date and time and the number of guests. Ask the guest, if they have any more questions or requests, if not, then politely thank them for considering the restaurant and we are forward to welcoming you. If a table is unavailable or the restaurant is full during the requested date/time/number of guests, then politely convey the guest/customer the status and check if the guest will be ok to reserve another available slot.\n2. Entertaining any food order for pickup or food delivery by the guests - you are responsible for taking the food order concerning to the restaurant and the menu items available in the context, either a pickup or delivery request. Each menu item/dish has a name and price or cost associated with it. You always have to refer to these menu items/dishes and their prices while taking the order request. You can entertain any special requests only if that context is provided by the restaurant.\nFollowing are the steps to be followed for taking the food order either for pickup or delivery:\nLet the customer select the dish/item, if the selected dish/item has a variation like size or quantity, reconfirm with the guest/customer. Only add items to order as per customers choice. Reconfirm the ordered menu item share the itemized price and then move ahead.\nYou have to reconfirm each menu dish/item along with its price & requested quantity for order confirmation. Ensure you share the itemized value and also the total order value.\nYou have to share the total order value by adding the value of each item and quantity requested by the customer/guest. Don\u2019t add any more cost to the item price or total order value as all the items are inclusive of taxes. If any exceptions with price, the context will be provided by the restaurant.\nEnsure to reconfirm the entire order including quantity, price, menu item, and special request(if any) made by the customer before placing the order in the system. Ask if they need to add anything else, if yes, just add any additional items in addition to the existing order.\nFor order pickup, request the customer/quest for their name, and phone number for confirmation. If the customer already provided their name, and phone number at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be ready in the next 30-45mins.\nFor food delivery, request the customer/quest for their name, phone number, and delivery address for confirmation. If the customer already provided their name, phone number, and delivery address at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be delivered in the next 45 minutes - 1 hour.\n3. Entertaining any special requests by the guests - if there are any special requests like specific seating arrangements, meal preparation process, etc, the respective context will be provided by the restaurant beforehand. If no context, politely mention that you need to check internally and revert asap.\n4. Sharing menu items, day or week specials, offers, chef or restaurant specials if requested by the guests - apart from the menu request by the customer, proactively share any offers, daily or weekly specialties (if any). The restaurant will provide details and context.\n5. Taking any custom inquiry or celebration or corporate events or party arrangements by the guests - entertain any custom planning or celebrations or corporate events or arrangements by the guests. The restaurant will provide details and context.\n6. General Information sharing about the restaurant, food, preparation style, menu options, seating arrangements or capacity, rush hours, and timings. The restaurant will provide details and context.\n7. Transfer the call to a human or arrange a call back if the guest's request is unique or if they ask to speak to a human or manager of the restaurant. Respond with a call-back option within 30 mins.",
                                    "voice": {
                                        "gender": "Female",
                                        "languageAccent": {
                                            "language": "English",
                                            "accent": "Indian"
                                        },
                                        "modelId": "voi.1729331556.dtKoZ0k5"
                                    },
                                    "status": "active",
                                    "timezone": "Asia/Calcutta",
                                    "createdBy": "org.1726902940.GZChqlpU",
                                    "createdAt": "2024-09-21T07:18:52.955359",
                                    "updatedBy": "k5NA7lbjreQglMmOBTVzBh3rFyU2",
                                    "updatedAt": "2024-10-25T05:47:29.458315"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "List All AI Agents",
                "description": "List All AI Agents",
                "operationId": "listAIAgentsV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field name to search by",
                            "title": "Search By"
                        },
                        "description": "Field name to search by",
                        "example": "name"
                    },
                    {
                        "name": "search_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Value to search for in the specified field",
                            "title": "Search Value"
                        },
                        "description": "Value to search for in the specified field",
                        "example": "search term"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status",
                        "example": "active"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field to sort by",
                            "title": "Sort By"
                        },
                        "description": "Field to sort by",
                        "example": "createdAt"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SortOrder"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sort order (asc or desc)",
                            "default": "asc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order (asc or desc)"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of AI Agents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent-Output"
                                    },
                                    "title": "Response Listaiagentsv1"
                                },
                                "example": [
                                    {
                                        "id": "aia.1726903132.obUuT7vM",
                                        "orgId": "org.1726902940.GZChqlpU",
                                        "name": "Sophia",
                                        "imageUrl": "https://lh3.googleusercontent.com/d/1O_8YXKk1lVOuo8EwFOW7VRdLKwdVrkNi=w1000?authuser=1/view",
                                        "mission": {
                                            "prompt": "You are an AI voice receptionist/agent for a restaurant. Your task is to engage in a human-like conversation with a caller/user/guest/customer, responding naturally and appropriately based on the conversation transcript and additional context provided.\nNever forget your name is {name}. You work as a {role} and as part of your work, you perform these {roleDescription}.\n            You work at a restaurant named {company_name}.\n            Your mission is to identify caller/user/guest/customer\u2019s requests and build strong relationships with them. You should maintain a positive attitude throughout the conversation and help the caller/user/guest/customer with the request.\nFor any other request made beyond the {roleDescription}, politely respond stating \u201cIt's beyond my context and role, but I can arrange a call back shortly. Can I have your name and the best number to reach\u201d\nIf the caller/customer asks for more information to be sent on their email, politely entertain that and request their email and best number to reach. Mention \"Someone from our team will revert shortly with the details you requested\". For table reservation always ask for date, time for the reservation. Also if they have any special requests.\nIf the caller/customer confirms the date and time for the table reservation or any other request, ask them to share their name and number first. For food delivery, ask for the name, number, and delivery address.\nIf the caller/customer asks for any information to be shared over an email, say \"Absolutely, what's your best email so we can share the info\"?\n            Follow conversation etiquettes:\n                1. When caller/user/guest/customer says \"hold on\" or \"let me complete\", you should respond with \"Sure, please go ahead\".\n                2. Keep your responses in short length to retain the caller/user/guest/customer\u2019s attention.\n                3. If the input question is not clear or incomplete, ask the user a clarification question, and give hints so that user can form a better question\n                4. Check your previous responses from the conversation history section and don't repeat the same sentences in your new responses. It will make users to lose interest.\nGuidelines for interaction:\n1. Always maintain a polite and friendly tone.\n2. Use the restaurant information provided to accurately answer questions.\n3. If you don't have specific information, politely inform the caller and offer to find out or connect them with someone who can help.\n4. For reservations, always confirm the date, time, number of guests, and any special requirements.\n5. When sharing menu information, be prepared to describe dishes, answer questions about ingredients, and mention any daily specials.\n6. For event bookings, gather all necessary details including the type of event, number of guests, preferred date and time, and any specific requirements.\n7. When handling food orders, confirm each item, ask about any customizations or dietary restrictions, and provide clear information about delivery times or pickup options.\n8. For special requests, listen carefully and try to accommodate if possible. If a request can't be fulfilled, offer alternatives.\nHandling objections and special situations:\n1. If a desired reservation time is not available, offer alternative times or dates.\n2. If a menu item is unavailable, apologize and suggest similar dishes.\n3. If there's a complaint, listen empathetically, apologize sincerely, and offer to address the issue or connect the caller with a manager if necessary.\n4. For any request you can't fulfill immediately, offer to take a message or have someone call back with more information.\nRemember to respond naturally, as if you were a human receptionist. Avoid using robotic or overly formal language. Use conversational phrases and show empathy where appropriate.\n            Your conversation can be in one of these stages in no particular order\n            # START OF STAGE DETAILS\n            {sequences}\n            # END OF STAGE DETAILS\n            Respond according to the stage of the conversation you are at. Dont use emojis or any emoticons in your response as your service is going to be rendered as a speech from a text-to-speech service.\n            This is your current conversation history with user, use this conversation history while generating response\n            # START OF CONVERSATION HISTORY\n            {conversation_history}\n            # END OF CONVERSATION HISTORY\n            Also these CONTEXT contains relevant information to answer user's query. Use this context to generate response\n            # START OF CONTEXT\n            {context}\n            # END OF CONTEXT\n\"Do not mention the price unless the caller asks\"\n\"If the customer/caller asks, are these vegan dishes? respond, yes we do have vegan options\"\n            Keep your responses always in the context of sales and support for the {company_name}.\n            Convey a confident tone, using direct and decisive language.\n            IMPORTANT: End each response with a probing question or a prompt that directs the user towards one of your objectives. Keep your responses in two or fewer short sentences.\n            Example Endings:\n            \"Would you like to proceed with a table reservation?\"\n            \"Shall I go ahead and place that order for you?\"\n            \"Is there anything else you'd like to know about our services?\"\n            Now, generate a response for the user question: {question}\nBe polite and respectful while keeping the tone of the conversation professional. Your greeting should be welcoming. Always clarify in your greeting the reason why you are calling\n Needs analysis: Ask open-ended questions to understand whether its a table reservation or order booking or general enquiry of the hotel. Listen carefully. Don't over-confirm or clarify else the caller will be frustrated and cut the call.\n Solution presentation: Based on the needs of the request, present your solution which also adheres to your responsibilities.\n End conversation: Thank the customer for their time and confirm the next steps.\nAlso, before ending the call mention \"you will receive a confirmation text shortly for your table reservation or food delivery\" as applicable. If there are no more additional requests, say bye and end the call.",
                                            "greeting": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                            "farewell": "Thanks for calling us, you have a great one! Bye"
                                        },
                                        "role": "Restuarant Receptionist",
                                        "roleDescription": "As a Restaurant Receptionist, your primary roles are as follows:\n1. Table Reservation by the guests - you are responsible for taking table reservation requests which involves asking guests or customers for their preferred date and time for visiting the restaurant, along with the total number of guests accompanying for the table reservation. During the call, confirm the reservation. Upon confirmation, convey that the table is reserved for the specific date and time and the number of guests. Ask the guest, if they have any more questions or requests, if not, then politely thank them for considering the restaurant and we are forward to welcoming you. If a table is unavailable or the restaurant is full during the requested date/time/number of guests, then politely convey the guest/customer the status and check if the guest will be ok to reserve another available slot.\n2. Entertaining any food order for pickup or food delivery by the guests - you are responsible for taking the food order concerning to the restaurant and the menu items available in the context, either a pickup or delivery request. Each menu item/dish has a name and price or cost associated with it. You always have to refer to these menu items/dishes and their prices while taking the order request. You can entertain any special requests only if that context is provided by the restaurant.\nFollowing are the steps to be followed for taking the food order either for pickup or delivery:\nLet the customer select the dish/item, if the selected dish/item has a variation like size or quantity, reconfirm with the guest/customer. Only add items to order as per customers choice. Reconfirm the ordered menu item share the itemized price and then move ahead.\nYou have to reconfirm each menu dish/item along with its price & requested quantity for order confirmation. Ensure you share the itemized value and also the total order value.\nYou have to share the total order value by adding the value of each item and quantity requested by the customer/guest. Don\u2019t add any more cost to the item price or total order value as all the items are inclusive of taxes. If any exceptions with price, the context will be provided by the restaurant.\nEnsure to reconfirm the entire order including quantity, price, menu item, and special request(if any) made by the customer before placing the order in the system. Ask if they need to add anything else, if yes, just add any additional items in addition to the existing order.\nFor order pickup, request the customer/quest for their name, and phone number for confirmation. If the customer already provided their name, and phone number at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be ready in the next 30-45mins.\nFor food delivery, request the customer/quest for their name, phone number, and delivery address for confirmation. If the customer already provided their name, phone number, and delivery address at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be delivered in the next 45 minutes - 1 hour.\n3. Entertaining any special requests by the guests - if there are any special requests like specific seating arrangements, meal preparation process, etc, the respective context will be provided by the restaurant beforehand. If no context, politely mention that you need to check internally and revert asap.\n4. Sharing menu items, day or week specials, offers, chef or restaurant specials if requested by the guests - apart from the menu request by the customer, proactively share any offers, daily or weekly specialties (if any). The restaurant will provide details and context.\n5. Taking any custom inquiry or celebration or corporate events or party arrangements by the guests - entertain any custom planning or celebrations or corporate events or arrangements by the guests. The restaurant will provide details and context.\n6. General Information sharing about the restaurant, food, preparation style, menu options, seating arrangements or capacity, rush hours, and timings. The restaurant will provide details and context.\n7. Transfer the call to a human or arrange a call back if the guest's request is unique or if they ask to speak to a human or manager of the restaurant. Respond with a call-back option within 30 mins.",
                                        "voice": {
                                            "gender": "Female",
                                            "languageAccent": {
                                                "language": "English",
                                                "accent": "Indian"
                                            },
                                            "modelId": "voi.1729331556.dtKoZ0k5"
                                        },
                                        "status": "active",
                                        "timezone": "Asia/Calcutta",
                                        "createdBy": "org.1726902940.GZChqlpU",
                                        "createdAt": "2024-09-21T07:18:52.955359",
                                        "updatedBy": "k5NA7lbjreQglMmOBTVzBh3rFyU2",
                                        "updatedAt": "2024-10-25T05:47:29.458315"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ai-agents/{agent_id}": {
            "get": {
                "tags": [
                    "Agents"
                ],
                "summary": "Get a Specific AI Agent by ID",
                "description": "Get a Specific AI Agent by ID",
                "operationId": "getAIAgentV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AI Agent retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent-Output"
                                },
                                "example": {
                                    "id": "aia.1726903132.obUuT7vM",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "name": "Sophia",
                                    "imageUrl": "https://lh3.googleusercontent.com/d/1O_8YXKk1lVOuo8EwFOW7VRdLKwdVrkNi=w1000?authuser=1/view",
                                    "mission": {
                                        "prompt": "You are an AI voice receptionist/agent for a restaurant. Your task is to engage in a human-like conversation with a caller/user/guest/customer, responding naturally and appropriately based on the conversation transcript and additional context provided.\nNever forget your name is {name}. You work as a {role} and as part of your work, you perform these {roleDescription}.\n            You work at a restaurant named {company_name}.\n            Your mission is to identify caller/user/guest/customer\u2019s requests and build strong relationships with them. You should maintain a positive attitude throughout the conversation and help the caller/user/guest/customer with the request.\nFor any other request made beyond the {roleDescription}, politely respond stating \u201cIt's beyond my context and role, but I can arrange a call back shortly. Can I have your name and the best number to reach\u201d\nIf the caller/customer asks for more information to be sent on their email, politely entertain that and request their email and best number to reach. Mention \"Someone from our team will revert shortly with the details you requested\". For table reservation always ask for date, time for the reservation. Also if they have any special requests.\nIf the caller/customer confirms the date and time for the table reservation or any other request, ask them to share their name and number first. For food delivery, ask for the name, number, and delivery address.\nIf the caller/customer asks for any information to be shared over an email, say \"Absolutely, what's your best email so we can share the info\"?\n            Follow conversation etiquettes:\n                1. When caller/user/guest/customer says \"hold on\" or \"let me complete\", you should respond with \"Sure, please go ahead\".\n                2. Keep your responses in short length to retain the caller/user/guest/customer\u2019s attention.\n                3. If the input question is not clear or incomplete, ask the user a clarification question, and give hints so that user can form a better question\n                4. Check your previous responses from the conversation history section and don't repeat the same sentences in your new responses. It will make users to lose interest.\nGuidelines for interaction:\n1. Always maintain a polite and friendly tone.\n2. Use the restaurant information provided to accurately answer questions.\n3. If you don't have specific information, politely inform the caller and offer to find out or connect them with someone who can help.\n4. For reservations, always confirm the date, time, number of guests, and any special requirements.\n5. When sharing menu information, be prepared to describe dishes, answer questions about ingredients, and mention any daily specials.\n6. For event bookings, gather all necessary details including the type of event, number of guests, preferred date and time, and any specific requirements.\n7. When handling food orders, confirm each item, ask about any customizations or dietary restrictions, and provide clear information about delivery times or pickup options.\n8. For special requests, listen carefully and try to accommodate if possible. If a request can't be fulfilled, offer alternatives.\nHandling objections and special situations:\n1. If a desired reservation time is not available, offer alternative times or dates.\n2. If a menu item is unavailable, apologize and suggest similar dishes.\n3. If there's a complaint, listen empathetically, apologize sincerely, and offer to address the issue or connect the caller with a manager if necessary.\n4. For any request you can't fulfill immediately, offer to take a message or have someone call back with more information.\nRemember to respond naturally, as if you were a human receptionist. Avoid using robotic or overly formal language. Use conversational phrases and show empathy where appropriate.\n            Your conversation can be in one of these stages in no particular order\n            # START OF STAGE DETAILS\n            {sequences}\n            # END OF STAGE DETAILS\n            Respond according to the stage of the conversation you are at. Dont use emojis or any emoticons in your response as your service is going to be rendered as a speech from a text-to-speech service.\n            This is your current conversation history with user, use this conversation history while generating response\n            # START OF CONVERSATION HISTORY\n            {conversation_history}\n            # END OF CONVERSATION HISTORY\n            Also these CONTEXT contains relevant information to answer user's query. Use this context to generate response\n            # START OF CONTEXT\n            {context}\n            # END OF CONTEXT\n\"Do not mention the price unless the caller asks\"\n\"If the customer/caller asks, are these vegan dishes? respond, yes we do have vegan options\"\n            Keep your responses always in the context of sales and support for the {company_name}.\n            Convey a confident tone, using direct and decisive language.\n            IMPORTANT: End each response with a probing question or a prompt that directs the user towards one of your objectives. Keep your responses in two or fewer short sentences.\n            Example Endings:\n            \"Would you like to proceed with a table reservation?\"\n            \"Shall I go ahead and place that order for you?\"\n            \"Is there anything else you'd like to know about our services?\"\n            Now, generate a response for the user question: {question}\nBe polite and respectful while keeping the tone of the conversation professional. Your greeting should be welcoming. Always clarify in your greeting the reason why you are calling\n Needs analysis: Ask open-ended questions to understand whether its a table reservation or order booking or general enquiry of the hotel. Listen carefully. Don't over-confirm or clarify else the caller will be frustrated and cut the call.\n Solution presentation: Based on the needs of the request, present your solution which also adheres to your responsibilities.\n End conversation: Thank the customer for their time and confirm the next steps.\nAlso, before ending the call mention \"you will receive a confirmation text shortly for your table reservation or food delivery\" as applicable. If there are no more additional requests, say bye and end the call.",
                                        "greeting": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                        "farewell": "Thanks for calling us, you have a great one! Bye"
                                    },
                                    "role": "Restuarant Receptionist",
                                    "roleDescription": "As a Restaurant Receptionist, your primary roles are as follows:\n1. Table Reservation by the guests - you are responsible for taking table reservation requests which involves asking guests or customers for their preferred date and time for visiting the restaurant, along with the total number of guests accompanying for the table reservation. During the call, confirm the reservation. Upon confirmation, convey that the table is reserved for the specific date and time and the number of guests. Ask the guest, if they have any more questions or requests, if not, then politely thank them for considering the restaurant and we are forward to welcoming you. If a table is unavailable or the restaurant is full during the requested date/time/number of guests, then politely convey the guest/customer the status and check if the guest will be ok to reserve another available slot.\n2. Entertaining any food order for pickup or food delivery by the guests - you are responsible for taking the food order concerning to the restaurant and the menu items available in the context, either a pickup or delivery request. Each menu item/dish has a name and price or cost associated with it. You always have to refer to these menu items/dishes and their prices while taking the order request. You can entertain any special requests only if that context is provided by the restaurant.\nFollowing are the steps to be followed for taking the food order either for pickup or delivery:\nLet the customer select the dish/item, if the selected dish/item has a variation like size or quantity, reconfirm with the guest/customer. Only add items to order as per customers choice. Reconfirm the ordered menu item share the itemized price and then move ahead.\nYou have to reconfirm each menu dish/item along with its price & requested quantity for order confirmation. Ensure you share the itemized value and also the total order value.\nYou have to share the total order value by adding the value of each item and quantity requested by the customer/guest. Don\u2019t add any more cost to the item price or total order value as all the items are inclusive of taxes. If any exceptions with price, the context will be provided by the restaurant.\nEnsure to reconfirm the entire order including quantity, price, menu item, and special request(if any) made by the customer before placing the order in the system. Ask if they need to add anything else, if yes, just add any additional items in addition to the existing order.\nFor order pickup, request the customer/quest for their name, and phone number for confirmation. If the customer already provided their name, and phone number at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be ready in the next 30-45mins.\nFor food delivery, request the customer/quest for their name, phone number, and delivery address for confirmation. If the customer already provided their name, phone number, and delivery address at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be delivered in the next 45 minutes - 1 hour.\n3. Entertaining any special requests by the guests - if there are any special requests like specific seating arrangements, meal preparation process, etc, the respective context will be provided by the restaurant beforehand. If no context, politely mention that you need to check internally and revert asap.\n4. Sharing menu items, day or week specials, offers, chef or restaurant specials if requested by the guests - apart from the menu request by the customer, proactively share any offers, daily or weekly specialties (if any). The restaurant will provide details and context.\n5. Taking any custom inquiry or celebration or corporate events or party arrangements by the guests - entertain any custom planning or celebrations or corporate events or arrangements by the guests. The restaurant will provide details and context.\n6. General Information sharing about the restaurant, food, preparation style, menu options, seating arrangements or capacity, rush hours, and timings. The restaurant will provide details and context.\n7. Transfer the call to a human or arrange a call back if the guest's request is unique or if they ask to speak to a human or manager of the restaurant. Respond with a call-back option within 30 mins.",
                                    "voice": {
                                        "gender": "Female",
                                        "languageAccent": {
                                            "language": "English",
                                            "accent": "Indian"
                                        },
                                        "modelId": "voi.1729331556.dtKoZ0k5"
                                    },
                                    "status": "active",
                                    "timezone": "Asia/Calcutta",
                                    "createdBy": "org.1726902940.GZChqlpU",
                                    "createdAt": "2024-09-21T07:18:52.955359",
                                    "updatedBy": "k5NA7lbjreQglMmOBTVzBh3rFyU2",
                                    "updatedAt": "2024-10-25T05:47:29.458315"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Agents"
                ],
                "summary": "Update a Specific AI Agent by ID",
                "description": "Update a Specific AI Agent by ID",
                "operationId": "updateAIAgentV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIAgent-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "AI Agent updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AIAgent-Output"
                                },
                                "example": {
                                    "id": "aia.1726903132.obUuT7vM",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "name": "Sophia",
                                    "imageUrl": "https://lh3.googleusercontent.com/d/1O_8YXKk1lVOuo8EwFOW7VRdLKwdVrkNi=w1000?authuser=1/view",
                                    "mission": {
                                        "prompt": "You are an AI voice receptionist/agent for a restaurant. Your task is to engage in a human-like conversation with a caller/user/guest/customer, responding naturally and appropriately based on the conversation transcript and additional context provided.\nNever forget your name is {name}. You work as a {role} and as part of your work, you perform these {roleDescription}.\n            You work at a restaurant named {company_name}.\n            Your mission is to identify caller/user/guest/customer\u2019s requests and build strong relationships with them. You should maintain a positive attitude throughout the conversation and help the caller/user/guest/customer with the request.\nFor any other request made beyond the {roleDescription}, politely respond stating \u201cIt's beyond my context and role, but I can arrange a call back shortly. Can I have your name and the best number to reach\u201d\nIf the caller/customer asks for more information to be sent on their email, politely entertain that and request their email and best number to reach. Mention \"Someone from our team will revert shortly with the details you requested\". For table reservation always ask for date, time for the reservation. Also if they have any special requests.\nIf the caller/customer confirms the date and time for the table reservation or any other request, ask them to share their name and number first. For food delivery, ask for the name, number, and delivery address.\nIf the caller/customer asks for any information to be shared over an email, say \"Absolutely, what's your best email so we can share the info\"?\n            Follow conversation etiquettes:\n                1. When caller/user/guest/customer says \"hold on\" or \"let me complete\", you should respond with \"Sure, please go ahead\".\n                2. Keep your responses in short length to retain the caller/user/guest/customer\u2019s attention.\n                3. If the input question is not clear or incomplete, ask the user a clarification question, and give hints so that user can form a better question\n                4. Check your previous responses from the conversation history section and don't repeat the same sentences in your new responses. It will make users to lose interest.\nGuidelines for interaction:\n1. Always maintain a polite and friendly tone.\n2. Use the restaurant information provided to accurately answer questions.\n3. If you don't have specific information, politely inform the caller and offer to find out or connect them with someone who can help.\n4. For reservations, always confirm the date, time, number of guests, and any special requirements.\n5. When sharing menu information, be prepared to describe dishes, answer questions about ingredients, and mention any daily specials.\n6. For event bookings, gather all necessary details including the type of event, number of guests, preferred date and time, and any specific requirements.\n7. When handling food orders, confirm each item, ask about any customizations or dietary restrictions, and provide clear information about delivery times or pickup options.\n8. For special requests, listen carefully and try to accommodate if possible. If a request can't be fulfilled, offer alternatives.\nHandling objections and special situations:\n1. If a desired reservation time is not available, offer alternative times or dates.\n2. If a menu item is unavailable, apologize and suggest similar dishes.\n3. If there's a complaint, listen empathetically, apologize sincerely, and offer to address the issue or connect the caller with a manager if necessary.\n4. For any request you can't fulfill immediately, offer to take a message or have someone call back with more information.\nRemember to respond naturally, as if you were a human receptionist. Avoid using robotic or overly formal language. Use conversational phrases and show empathy where appropriate.\n            Your conversation can be in one of these stages in no particular order\n            # START OF STAGE DETAILS\n            {sequences}\n            # END OF STAGE DETAILS\n            Respond according to the stage of the conversation you are at. Dont use emojis or any emoticons in your response as your service is going to be rendered as a speech from a text-to-speech service.\n            This is your current conversation history with user, use this conversation history while generating response\n            # START OF CONVERSATION HISTORY\n            {conversation_history}\n            # END OF CONVERSATION HISTORY\n            Also these CONTEXT contains relevant information to answer user's query. Use this context to generate response\n            # START OF CONTEXT\n            {context}\n            # END OF CONTEXT\n\"Do not mention the price unless the caller asks\"\n\"If the customer/caller asks, are these vegan dishes? respond, yes we do have vegan options\"\n            Keep your responses always in the context of sales and support for the {company_name}.\n            Convey a confident tone, using direct and decisive language.\n            IMPORTANT: End each response with a probing question or a prompt that directs the user towards one of your objectives. Keep your responses in two or fewer short sentences.\n            Example Endings:\n            \"Would you like to proceed with a table reservation?\"\n            \"Shall I go ahead and place that order for you?\"\n            \"Is there anything else you'd like to know about our services?\"\n            Now, generate a response for the user question: {question}\nBe polite and respectful while keeping the tone of the conversation professional. Your greeting should be welcoming. Always clarify in your greeting the reason why you are calling\n Needs analysis: Ask open-ended questions to understand whether its a table reservation or order booking or general enquiry of the hotel. Listen carefully. Don't over-confirm or clarify else the caller will be frustrated and cut the call.\n Solution presentation: Based on the needs of the request, present your solution which also adheres to your responsibilities.\n End conversation: Thank the customer for their time and confirm the next steps.\nAlso, before ending the call mention \"you will receive a confirmation text shortly for your table reservation or food delivery\" as applicable. If there are no more additional requests, say bye and end the call.",
                                        "greeting": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                        "farewell": "Thanks for calling us, you have a great one! Bye"
                                    },
                                    "role": "Restuarant Receptionist",
                                    "roleDescription": "As a Restaurant Receptionist, your primary roles are as follows:\n1. Table Reservation by the guests - you are responsible for taking table reservation requests which involves asking guests or customers for their preferred date and time for visiting the restaurant, along with the total number of guests accompanying for the table reservation. During the call, confirm the reservation. Upon confirmation, convey that the table is reserved for the specific date and time and the number of guests. Ask the guest, if they have any more questions or requests, if not, then politely thank them for considering the restaurant and we are forward to welcoming you. If a table is unavailable or the restaurant is full during the requested date/time/number of guests, then politely convey the guest/customer the status and check if the guest will be ok to reserve another available slot.\n2. Entertaining any food order for pickup or food delivery by the guests - you are responsible for taking the food order concerning to the restaurant and the menu items available in the context, either a pickup or delivery request. Each menu item/dish has a name and price or cost associated with it. You always have to refer to these menu items/dishes and their prices while taking the order request. You can entertain any special requests only if that context is provided by the restaurant.\nFollowing are the steps to be followed for taking the food order either for pickup or delivery:\nLet the customer select the dish/item, if the selected dish/item has a variation like size or quantity, reconfirm with the guest/customer. Only add items to order as per customers choice. Reconfirm the ordered menu item share the itemized price and then move ahead.\nYou have to reconfirm each menu dish/item along with its price & requested quantity for order confirmation. Ensure you share the itemized value and also the total order value.\nYou have to share the total order value by adding the value of each item and quantity requested by the customer/guest. Don\u2019t add any more cost to the item price or total order value as all the items are inclusive of taxes. If any exceptions with price, the context will be provided by the restaurant.\nEnsure to reconfirm the entire order including quantity, price, menu item, and special request(if any) made by the customer before placing the order in the system. Ask if they need to add anything else, if yes, just add any additional items in addition to the existing order.\nFor order pickup, request the customer/quest for their name, and phone number for confirmation. If the customer already provided their name, and phone number at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be ready in the next 30-45mins.\nFor food delivery, request the customer/quest for their name, phone number, and delivery address for confirmation. If the customer already provided their name, phone number, and delivery address at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be delivered in the next 45 minutes - 1 hour.\n3. Entertaining any special requests by the guests - if there are any special requests like specific seating arrangements, meal preparation process, etc, the respective context will be provided by the restaurant beforehand. If no context, politely mention that you need to check internally and revert asap.\n4. Sharing menu items, day or week specials, offers, chef or restaurant specials if requested by the guests - apart from the menu request by the customer, proactively share any offers, daily or weekly specialties (if any). The restaurant will provide details and context.\n5. Taking any custom inquiry or celebration or corporate events or party arrangements by the guests - entertain any custom planning or celebrations or corporate events or arrangements by the guests. The restaurant will provide details and context.\n6. General Information sharing about the restaurant, food, preparation style, menu options, seating arrangements or capacity, rush hours, and timings. The restaurant will provide details and context.\n7. Transfer the call to a human or arrange a call back if the guest's request is unique or if they ask to speak to a human or manager of the restaurant. Respond with a call-back option within 30 mins.",
                                    "voice": {
                                        "gender": "Female",
                                        "languageAccent": {
                                            "language": "English",
                                            "accent": "Indian"
                                        },
                                        "modelId": "voi.1729331556.dtKoZ0k5"
                                    },
                                    "status": "active",
                                    "timezone": "Asia/Calcutta",
                                    "createdBy": "org.1726902940.GZChqlpU",
                                    "createdAt": "2024-09-21T07:18:52.955359",
                                    "updatedBy": "k5NA7lbjreQglMmOBTVzBh3rFyU2",
                                    "updatedAt": "2024-10-25T05:47:29.458315"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Agents"
                ],
                "summary": "Delete a Specific AI Agent by ID",
                "description": "Delete a Specific AI Agent by ID",
                "operationId": "deleteAIAgentV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AI Agent deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/voice-models": {
            "get": {
                "tags": [
                    "VoiceModels"
                ],
                "summary": "Get list of voices available for calls",
                "description": "Get list of voices available for calls",
                "operationId": "listVoiceModelsV1",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/VoiceModel"
                                    },
                                    "type": "array",
                                    "title": "Response Listvoicemodelsv1"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ]
            }
        },
        "/v1/hives": {
            "post": {
                "tags": [
                    "Hive"
                ],
                "summary": "Create a New Hive",
                "description": "Hive is a collection of documents that are used to train the Agent. Hive can be a PDF, DOCX, TXT or a website URL",
                "operationId": "createHiveV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend__dto__models__HiveContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hive created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hive"
                                },
                                "example": {
                                    "id": "hiv.1727418138.IPGwVl1f",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "content": {
                                        "hiveType": "WEBSITE",
                                        "url": "https://www.cotekoreansteakhouse.com/",
                                        "hiveProps": {
                                            "crawl_child_pages": true
                                        }
                                    },
                                    "status": "completed",
                                    "createdBy": "org.1726902940.GZChqlpU",
                                    "createdAt": "2024-09-27T06:22:18.000277",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-09-27T06:27:34.276065"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Hive"
                ],
                "summary": "List All Hives",
                "description": "List All Hives",
                "operationId": "listHivesV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field name to search by",
                            "title": "Search By"
                        },
                        "description": "Field name to search by",
                        "example": "name"
                    },
                    {
                        "name": "search_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Value to search for in the specified field",
                            "title": "Search Value"
                        },
                        "description": "Value to search for in the specified field",
                        "example": "search term"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status",
                        "example": "active"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field to sort by",
                            "title": "Sort By"
                        },
                        "description": "Field to sort by",
                        "example": "createdAt"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SortOrder"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sort order (asc or desc)",
                            "default": "asc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order (asc or desc)"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of hives retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Hive"
                                    },
                                    "title": "Response Listhivesv1"
                                },
                                "example": [
                                    {
                                        "id": "hiv.1727418138.IPGwVl1f",
                                        "orgId": "org.1726902940.GZChqlpU",
                                        "content": {
                                            "hiveType": "WEBSITE",
                                            "url": "https://www.cotekoreansteakhouse.com/",
                                            "hiveProps": {
                                                "crawl_child_pages": true
                                            }
                                        },
                                        "status": "completed",
                                        "createdBy": "org.1726902940.GZChqlpU",
                                        "createdAt": "2024-09-27T06:22:18.000277",
                                        "updatedBy": "trata-system",
                                        "updatedAt": "2024-09-27T06:27:34.276065"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/hives/{hive_id}": {
            "get": {
                "tags": [
                    "Hive"
                ],
                "summary": "Get a Specific Hive by ID",
                "description": "Get a Specific Hive by ID",
                "operationId": "getHiveV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hive_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the hive",
                            "title": "Hive Id"
                        },
                        "description": "ID of the hive"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hive retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hive"
                                },
                                "example": {
                                    "id": "hiv.1727418138.IPGwVl1f",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "content": {
                                        "hiveType": "WEBSITE",
                                        "url": "https://www.cotekoreansteakhouse.com/",
                                        "hiveProps": {
                                            "crawl_child_pages": true
                                        }
                                    },
                                    "status": "completed",
                                    "createdBy": "org.1726902940.GZChqlpU",
                                    "createdAt": "2024-09-27T06:22:18.000277",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-09-27T06:27:34.276065"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Hive"
                ],
                "summary": "Update a Specific Hive by ID",
                "description": "Update a Specific Hive by ID",
                "operationId": "updateHiveV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hive_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the hive",
                            "title": "Hive Id"
                        },
                        "description": "ID of the hive"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/backend__db__models__HiveContent"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hive updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hive"
                                },
                                "example": {
                                    "id": "hiv.1727418138.IPGwVl1f",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "content": {
                                        "hiveType": "WEBSITE",
                                        "url": "https://www.cotekoreansteakhouse.com/",
                                        "hiveProps": {
                                            "crawl_child_pages": true
                                        }
                                    },
                                    "status": "completed",
                                    "createdBy": "org.1726902940.GZChqlpU",
                                    "createdAt": "2024-09-27T06:22:18.000277",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-09-27T06:27:34.276065"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hive"
                ],
                "summary": "Delete a Specific Hive by ID",
                "description": "Delete a Specific Hive by ID",
                "operationId": "deleteHiveV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hive_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the hive",
                            "title": "Hive Id"
                        },
                        "description": "ID of the hive"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hive deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/hives/{hive_id}/ai-agents/{agent_id}/link": {
            "post": {
                "tags": [
                    "HiveAgentLink"
                ],
                "summary": "Create a Link Between a Hive and an Agent",
                "description": "Create a Link Between a Hive and an Agent",
                "operationId": "createHiveAgentLinkV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hive_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the hive",
                            "title": "Hive Id"
                        },
                        "description": "ID of the hive"
                    },
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "HiveAgentLink"
                ],
                "summary": "Delete a Link Between a Hive and an Agent",
                "description": "Delete a Link Between a Hive and an Agent",
                "operationId": "deleteHiveAgentLinkV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hive_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the hive",
                            "title": "Hive Id"
                        },
                        "description": "ID of the hive"
                    },
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ai-agents/{agent_id}/hives": {
            "get": {
                "tags": [
                    "HiveAgentLink"
                ],
                "summary": "List All Hives Linked to a Specific Agent",
                "description": "List All Hives Linked to a Specific Agent",
                "operationId": "listHivesOfAgentV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of hives retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Hive"
                                    },
                                    "title": "Response Listhivesofagentv1"
                                },
                                "example": [
                                    {
                                        "id": "hiv.1727418138.IPGwVl1f",
                                        "orgId": "org.1726902940.GZChqlpU",
                                        "content": {
                                            "hiveType": "WEBSITE",
                                            "url": "https://www.cotekoreansteakhouse.com/",
                                            "hiveProps": {
                                                "crawl_child_pages": true
                                            }
                                        },
                                        "status": "completed",
                                        "createdBy": "org.1726902940.GZChqlpU",
                                        "createdAt": "2024-09-27T06:22:18.000277",
                                        "updatedBy": "trata-system",
                                        "updatedAt": "2024-09-27T06:27:34.276065"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/hives/{hive_id}/ai-agents": {
            "get": {
                "tags": [
                    "HiveAgentLink"
                ],
                "summary": "List All Agents Linked to a Specific Hive",
                "description": "List All Agents Linked to a Specific Hive",
                "operationId": "listAgentsOfHiveV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "hive_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the hive",
                            "title": "Hive Id"
                        },
                        "description": "ID of the hive"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of agents retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent-Output"
                                    },
                                    "title": "Response Listagentsofhivev1"
                                },
                                "example": [
                                    {
                                        "id": "aia.1726903132.obUuT7vM",
                                        "orgId": "org.1726902940.GZChqlpU",
                                        "name": "Sophia",
                                        "imageUrl": "https://lh3.googleusercontent.com/d/1O_8YXKk1lVOuo8EwFOW7VRdLKwdVrkNi=w1000?authuser=1/view",
                                        "mission": {
                                            "prompt": "You are an AI voice receptionist/agent for a restaurant. Your task is to engage in a human-like conversation with a caller/user/guest/customer, responding naturally and appropriately based on the conversation transcript and additional context provided.\nNever forget your name is {name}. You work as a {role} and as part of your work, you perform these {roleDescription}.\n            You work at a restaurant named {company_name}.\n            Your mission is to identify caller/user/guest/customer\u2019s requests and build strong relationships with them. You should maintain a positive attitude throughout the conversation and help the caller/user/guest/customer with the request.\nFor any other request made beyond the {roleDescription}, politely respond stating \u201cIt's beyond my context and role, but I can arrange a call back shortly. Can I have your name and the best number to reach\u201d\nIf the caller/customer asks for more information to be sent on their email, politely entertain that and request their email and best number to reach. Mention \"Someone from our team will revert shortly with the details you requested\". For table reservation always ask for date, time for the reservation. Also if they have any special requests.\nIf the caller/customer confirms the date and time for the table reservation or any other request, ask them to share their name and number first. For food delivery, ask for the name, number, and delivery address.\nIf the caller/customer asks for any information to be shared over an email, say \"Absolutely, what's your best email so we can share the info\"?\n            Follow conversation etiquettes:\n                1. When caller/user/guest/customer says \"hold on\" or \"let me complete\", you should respond with \"Sure, please go ahead\".\n                2. Keep your responses in short length to retain the caller/user/guest/customer\u2019s attention.\n                3. If the input question is not clear or incomplete, ask the user a clarification question, and give hints so that user can form a better question\n                4. Check your previous responses from the conversation history section and don't repeat the same sentences in your new responses. It will make users to lose interest.\nGuidelines for interaction:\n1. Always maintain a polite and friendly tone.\n2. Use the restaurant information provided to accurately answer questions.\n3. If you don't have specific information, politely inform the caller and offer to find out or connect them with someone who can help.\n4. For reservations, always confirm the date, time, number of guests, and any special requirements.\n5. When sharing menu information, be prepared to describe dishes, answer questions about ingredients, and mention any daily specials.\n6. For event bookings, gather all necessary details including the type of event, number of guests, preferred date and time, and any specific requirements.\n7. When handling food orders, confirm each item, ask about any customizations or dietary restrictions, and provide clear information about delivery times or pickup options.\n8. For special requests, listen carefully and try to accommodate if possible. If a request can't be fulfilled, offer alternatives.\nHandling objections and special situations:\n1. If a desired reservation time is not available, offer alternative times or dates.\n2. If a menu item is unavailable, apologize and suggest similar dishes.\n3. If there's a complaint, listen empathetically, apologize sincerely, and offer to address the issue or connect the caller with a manager if necessary.\n4. For any request you can't fulfill immediately, offer to take a message or have someone call back with more information.\nRemember to respond naturally, as if you were a human receptionist. Avoid using robotic or overly formal language. Use conversational phrases and show empathy where appropriate.\n            Your conversation can be in one of these stages in no particular order\n            # START OF STAGE DETAILS\n            {sequences}\n            # END OF STAGE DETAILS\n            Respond according to the stage of the conversation you are at. Dont use emojis or any emoticons in your response as your service is going to be rendered as a speech from a text-to-speech service.\n            This is your current conversation history with user, use this conversation history while generating response\n            # START OF CONVERSATION HISTORY\n            {conversation_history}\n            # END OF CONVERSATION HISTORY\n            Also these CONTEXT contains relevant information to answer user's query. Use this context to generate response\n            # START OF CONTEXT\n            {context}\n            # END OF CONTEXT\n\"Do not mention the price unless the caller asks\"\n\"If the customer/caller asks, are these vegan dishes? respond, yes we do have vegan options\"\n            Keep your responses always in the context of sales and support for the {company_name}.\n            Convey a confident tone, using direct and decisive language.\n            IMPORTANT: End each response with a probing question or a prompt that directs the user towards one of your objectives. Keep your responses in two or fewer short sentences.\n            Example Endings:\n            \"Would you like to proceed with a table reservation?\"\n            \"Shall I go ahead and place that order for you?\"\n            \"Is there anything else you'd like to know about our services?\"\n            Now, generate a response for the user question: {question}\nBe polite and respectful while keeping the tone of the conversation professional. Your greeting should be welcoming. Always clarify in your greeting the reason why you are calling\n Needs analysis: Ask open-ended questions to understand whether its a table reservation or order booking or general enquiry of the hotel. Listen carefully. Don't over-confirm or clarify else the caller will be frustrated and cut the call.\n Solution presentation: Based on the needs of the request, present your solution which also adheres to your responsibilities.\n End conversation: Thank the customer for their time and confirm the next steps.\nAlso, before ending the call mention \"you will receive a confirmation text shortly for your table reservation or food delivery\" as applicable. If there are no more additional requests, say bye and end the call.",
                                            "greeting": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                            "farewell": "Thanks for calling us, you have a great one! Bye"
                                        },
                                        "role": "Restuarant Receptionist",
                                        "roleDescription": "As a Restaurant Receptionist, your primary roles are as follows:\n1. Table Reservation by the guests - you are responsible for taking table reservation requests which involves asking guests or customers for their preferred date and time for visiting the restaurant, along with the total number of guests accompanying for the table reservation. During the call, confirm the reservation. Upon confirmation, convey that the table is reserved for the specific date and time and the number of guests. Ask the guest, if they have any more questions or requests, if not, then politely thank them for considering the restaurant and we are forward to welcoming you. If a table is unavailable or the restaurant is full during the requested date/time/number of guests, then politely convey the guest/customer the status and check if the guest will be ok to reserve another available slot.\n2. Entertaining any food order for pickup or food delivery by the guests - you are responsible for taking the food order concerning to the restaurant and the menu items available in the context, either a pickup or delivery request. Each menu item/dish has a name and price or cost associated with it. You always have to refer to these menu items/dishes and their prices while taking the order request. You can entertain any special requests only if that context is provided by the restaurant.\nFollowing are the steps to be followed for taking the food order either for pickup or delivery:\nLet the customer select the dish/item, if the selected dish/item has a variation like size or quantity, reconfirm with the guest/customer. Only add items to order as per customers choice. Reconfirm the ordered menu item share the itemized price and then move ahead.\nYou have to reconfirm each menu dish/item along with its price & requested quantity for order confirmation. Ensure you share the itemized value and also the total order value.\nYou have to share the total order value by adding the value of each item and quantity requested by the customer/guest. Don\u2019t add any more cost to the item price or total order value as all the items are inclusive of taxes. If any exceptions with price, the context will be provided by the restaurant.\nEnsure to reconfirm the entire order including quantity, price, menu item, and special request(if any) made by the customer before placing the order in the system. Ask if they need to add anything else, if yes, just add any additional items in addition to the existing order.\nFor order pickup, request the customer/quest for their name, and phone number for confirmation. If the customer already provided their name, and phone number at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be ready in the next 30-45mins.\nFor food delivery, request the customer/quest for their name, phone number, and delivery address for confirmation. If the customer already provided their name, phone number, and delivery address at the start of the call, reconfirm the same details. Upon confirmation, mention the order will be delivered in the next 45 minutes - 1 hour.\n3. Entertaining any special requests by the guests - if there are any special requests like specific seating arrangements, meal preparation process, etc, the respective context will be provided by the restaurant beforehand. If no context, politely mention that you need to check internally and revert asap.\n4. Sharing menu items, day or week specials, offers, chef or restaurant specials if requested by the guests - apart from the menu request by the customer, proactively share any offers, daily or weekly specialties (if any). The restaurant will provide details and context.\n5. Taking any custom inquiry or celebration or corporate events or party arrangements by the guests - entertain any custom planning or celebrations or corporate events or arrangements by the guests. The restaurant will provide details and context.\n6. General Information sharing about the restaurant, food, preparation style, menu options, seating arrangements or capacity, rush hours, and timings. The restaurant will provide details and context.\n7. Transfer the call to a human or arrange a call back if the guest's request is unique or if they ask to speak to a human or manager of the restaurant. Respond with a call-back option within 30 mins.",
                                        "voice": {
                                            "gender": "Female",
                                            "languageAccent": {
                                                "language": "English",
                                                "accent": "Indian"
                                            },
                                            "modelId": "voi.1729331556.dtKoZ0k5"
                                        },
                                        "status": "active",
                                        "timezone": "Asia/Calcutta",
                                        "createdBy": "org.1726902940.GZChqlpU",
                                        "createdAt": "2024-09-21T07:18:52.955359",
                                        "updatedBy": "k5NA7lbjreQglMmOBTVzBh3rFyU2",
                                        "updatedAt": "2024-10-25T05:47:29.458315"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/actions": {
            "post": {
                "tags": [
                    "Actions"
                ],
                "summary": "Create a New Action",
                "description": "Create a New Action",
                "operationId": "createActionV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Action-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Action created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend__db__models__Action"
                                },
                                "example": {
                                    "id": "act.1234567890",
                                    "orgId": "org.1234567890",
                                    "name": "Webhook on call completion.",
                                    "description": "This action will be invoked when a call is completed. It will send a webhook to the specified url.",
                                    "parameters": {},
                                    "endpoint": {
                                        "url": "https://webhook-endpoint.com",
                                        "method": "POST"
                                    },
                                    "invocationTrigger": "webhook.conversation_en",
                                    "userWaitingText": "Please wait...",
                                    "userSuccessText": "Action completed successfully",
                                    "userErrorText": "An error occurred",
                                    "createdBy": "usr.1234567890",
                                    "createdAt": "2024-12-06T19:23:38.616711",
                                    "updatedBy": "usr.1234567890",
                                    "updatedAt": "2024-12-06T19:23:38.616714"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "List All Actions Under the User&#39;s Organization",
                "description": "List All Actions Under the User&#39;s Organization",
                "operationId": "listActionsV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field name to search by",
                            "title": "Search By"
                        },
                        "description": "Field name to search by",
                        "example": "name"
                    },
                    {
                        "name": "search_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Value to search for in the specified field",
                            "title": "Search Value"
                        },
                        "description": "Value to search for in the specified field",
                        "example": "search term"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status",
                        "example": "active"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field to sort by",
                            "title": "Sort By"
                        },
                        "description": "Field to sort by",
                        "example": "createdAt"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SortOrder"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sort order (asc or desc)",
                            "default": "asc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order (asc or desc)"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of actions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/backend__db__models__Action"
                                    },
                                    "title": "Response Listactionsv1"
                                },
                                "example": [
                                    {
                                        "id": "act.1234567890",
                                        "orgId": "org.1234567890",
                                        "name": "Webhook on call completion.",
                                        "description": "This action will be invoked when a call is completed. It will send a webhook to the specified url.",
                                        "parameters": {},
                                        "endpoint": {
                                            "url": "https://webhook-endpoint.com",
                                            "method": "POST"
                                        },
                                        "invocationTrigger": "webhook.conversation_en",
                                        "userWaitingText": "Please wait...",
                                        "userSuccessText": "Action completed successfully",
                                        "userErrorText": "An error occurred",
                                        "createdBy": "usr.1234567890",
                                        "createdAt": "2024-12-06T19:23:38.616711",
                                        "updatedBy": "usr.1234567890",
                                        "updatedAt": "2024-12-06T19:23:38.616714"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/actions/{action_id}": {
            "get": {
                "tags": [
                    "Actions"
                ],
                "summary": "Get a Specific Action by ID",
                "description": "Get a Specific Action by ID",
                "operationId": "getActionV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "action_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the action",
                            "title": "Action Id"
                        },
                        "description": "ID of the action"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Action retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend__db__models__Action"
                                },
                                "example": {
                                    "id": "act.1234567890",
                                    "orgId": "org.1234567890",
                                    "name": "Webhook on call completion.",
                                    "description": "This action will be invoked when a call is completed. It will send a webhook to the specified url.",
                                    "parameters": {},
                                    "endpoint": {
                                        "url": "https://webhook-endpoint.com",
                                        "method": "POST"
                                    },
                                    "invocationTrigger": "webhook.conversation_en",
                                    "userWaitingText": "Please wait...",
                                    "userSuccessText": "Action completed successfully",
                                    "userErrorText": "An error occurred",
                                    "createdBy": "usr.1234567890",
                                    "createdAt": "2024-12-06T19:23:38.616711",
                                    "updatedBy": "usr.1234567890",
                                    "updatedAt": "2024-12-06T19:23:38.616714"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Actions"
                ],
                "summary": "Update a Specific Action by ID",
                "description": "Update a Specific Action by ID",
                "operationId": "updateActionV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "action_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the action",
                            "title": "Action Id"
                        },
                        "description": "ID of the action"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Action-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Action updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/backend__db__models__Action"
                                },
                                "example": {
                                    "id": "act.1234567890",
                                    "orgId": "org.1234567890",
                                    "name": "Webhook on call completion.",
                                    "description": "This action will be invoked when a call is completed. It will send a webhook to the specified url.",
                                    "parameters": {},
                                    "endpoint": {
                                        "url": "https://webhook-endpoint.com",
                                        "method": "POST"
                                    },
                                    "invocationTrigger": "webhook.conversation_en",
                                    "userWaitingText": "Please wait...",
                                    "userSuccessText": "Action completed successfully",
                                    "userErrorText": "An error occurred",
                                    "createdBy": "usr.1234567890",
                                    "createdAt": "2024-12-06T19:23:38.616711",
                                    "updatedBy": "usr.1234567890",
                                    "updatedAt": "2024-12-06T19:23:38.616714"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Actions"
                ],
                "summary": "Delete a Specific Action by ID",
                "description": "Delete a Specific Action by ID",
                "operationId": "deleteActionV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "action_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the action",
                            "title": "Action Id"
                        },
                        "description": "ID of the action"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Action deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/actions/{action_id}/ai-agents/{agent_id}/link": {
            "post": {
                "tags": [
                    "ActionAgentLink"
                ],
                "summary": "Create a Link Between an Action and an Agent",
                "description": "Create a Link Between an Action and an Agent",
                "operationId": "createActionAgentLinkV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "action_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the action",
                            "title": "Action Id"
                        },
                        "description": "ID of the action"
                    },
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ActionAgentLink"
                ],
                "summary": "Delete a Link Between an Action and an Agent",
                "description": "Delete a Link Between an Action and an Agent",
                "operationId": "deleteActionAgentLinkV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "action_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the action",
                            "title": "Action Id"
                        },
                        "description": "ID of the action"
                    },
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Link deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/ai-agents/{agent_id}/actions": {
            "get": {
                "tags": [
                    "ActionAgentLink"
                ],
                "summary": "List All Actions Linked to a Specific Agent",
                "description": "List All Actions Linked to a Specific Agent",
                "operationId": "listActionsOfAgentV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the agent",
                            "title": "Agent Id"
                        },
                        "description": "ID of the agent"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of actions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/backend__db__models__Action"
                                    },
                                    "title": "Response Listactionsofagentv1"
                                },
                                "example": [
                                    {
                                        "id": "act.1234567890",
                                        "orgId": "org.1234567890",
                                        "name": "Webhook on call completion.",
                                        "description": "This action will be invoked when a call is completed. It will send a webhook to the specified url.",
                                        "parameters": {},
                                        "endpoint": {
                                            "url": "https://webhook-endpoint.com",
                                            "method": "POST"
                                        },
                                        "invocationTrigger": "webhook.conversation_en",
                                        "userWaitingText": "Please wait...",
                                        "userSuccessText": "Action completed successfully",
                                        "userErrorText": "An error occurred",
                                        "createdBy": "usr.1234567890",
                                        "createdAt": "2024-12-06T19:23:38.616711",
                                        "updatedBy": "usr.1234567890",
                                        "updatedAt": "2024-12-06T19:23:38.616714"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a New Product",
                "description": "Create a New Product",
                "operationId": "createProductV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product-Output"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "active": true,
                                    "defaultPrice": 1299,
                                    "currency": "USD",
                                    "description": "Spicy Korean Chicken Wings",
                                    "name": "Spicy Korean Chicken Wings",
                                    "shippable": true,
                                    "features": [],
                                    "scheduleAppointment": false,
                                    "props": {},
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List All Products",
                "description": "List All Products",
                "operationId": "listProductsV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field name to search by",
                            "title": "Search By"
                        },
                        "description": "Field name to search by",
                        "example": "name"
                    },
                    {
                        "name": "search_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Value to search for in the specified field",
                            "title": "Search Value"
                        },
                        "description": "Value to search for in the specified field",
                        "example": "search term"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status",
                        "example": "active"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field to sort by",
                            "title": "Sort By"
                        },
                        "description": "Field to sort by",
                        "example": "createdAt"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SortOrder"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sort order (asc or desc)",
                            "default": "asc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order (asc or desc)"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter products by specific tags",
                            "title": "Tags"
                        },
                        "description": "Filter products by specific tags",
                        "example": [
                            "electronics",
                            "accessories"
                        ]
                    },
                    {
                        "name": "product_ids",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter by specific product IDs",
                            "title": "Product Ids"
                        },
                        "description": "Filter by specific product IDs",
                        "example": [
                            "prod_123",
                            "prod_456"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product-Output"
                                    },
                                    "title": "Response Listproductsv1"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "active": true,
                                    "defaultPrice": 1299,
                                    "currency": "USD",
                                    "description": "Spicy Korean Chicken Wings",
                                    "name": "Spicy Korean Chicken Wings",
                                    "shippable": true,
                                    "features": [],
                                    "scheduleAppointment": false,
                                    "props": {},
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/{product_id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a Specific Product by ID",
                "description": "Get a Specific Product by ID",
                "operationId": "getProductV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the product",
                            "title": "Product Id"
                        },
                        "description": "ID of the product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product-Output"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "active": true,
                                    "defaultPrice": 1299,
                                    "currency": "USD",
                                    "description": "Spicy Korean Chicken Wings",
                                    "name": "Spicy Korean Chicken Wings",
                                    "shippable": true,
                                    "features": [],
                                    "scheduleAppointment": false,
                                    "props": {},
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a Specific Product by ID",
                "description": "Update a Specific Product by ID",
                "operationId": "updateProductV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the product",
                            "title": "Product Id"
                        },
                        "description": "ID of the product"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product-Input"
                            },
                            "example": {
                                "id": "pro.1731301754.OZSMSU1S",
                                "orgId": "org.1726902940.GZChqlpU",
                                "active": true,
                                "defaultPrice": 1299,
                                "currency": "USD",
                                "description": "Spicy Korean Chicken Wings",
                                "name": "Spicy Korean Chicken Wings",
                                "shippable": true,
                                "features": [],
                                "scheduleAppointment": false,
                                "props": {},
                                "status": "active",
                                "createdBy": "trata-system",
                                "createdAt": "2024-11-11T05:09:14.979287",
                                "updatedBy": "trata-system",
                                "updatedAt": "2024-11-11T05:09:14.979289"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product-Output"
                                },
                                "example": {
                                    "id": "pro.1731301754.OZSMSU1S",
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "active": true,
                                    "defaultPrice": 1299,
                                    "currency": "USD",
                                    "description": "Spicy Korean Chicken Wings",
                                    "name": "Spicy Korean Chicken Wings",
                                    "shippable": true,
                                    "features": [],
                                    "scheduleAppointment": false,
                                    "props": {},
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-11-11T05:09:14.979287",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-11-11T05:09:14.979289"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a Specific Product by ID",
                "description": "Delete a Specific Product by ID",
                "operationId": "deleteProductV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the product",
                            "title": "Product Id"
                        },
                        "description": "ID of the product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/products/{product_id}/agents": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "List All Agents Linked to a Specific Product",
                "description": "List All Agents Linked to a Specific Product",
                "operationId": "listAgentsOfProductV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "product_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the product",
                            "title": "Product Id"
                        },
                        "description": "ID of the product"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AIAgent-Output"
                                    },
                                    "title": "Response Listagentsofproductv1"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/conversations": {
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Create a New Conversation",
                "description": "Create a New Conversation",
                "operationId": "createConversationV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Conversation-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation-Output"
                                },
                                "example": {
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "prospectId": "pro.1731301754.OZSMSU1S",
                                    "source": "35.191.28.74",
                                    "sourceType": "BROWSER",
                                    "aiAgentId": "aia.1726903132.obUuT7vM",
                                    "transcriptText": [
                                        {
                                            "speaker": "AI",
                                            "message": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                            "timestamp": "2024-11-11T05:06:21.049339",
                                            "message_id": "dia.1731301581.gTtTGu8J"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Hey.",
                                            "timestamp": "2024-11-11T05:06:31.737515",
                                            "message_id": "Hey."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "What do you actually do?",
                                            "timestamp": "2024-11-11T05:06:33.756877",
                                            "message_id": "What do you actually do?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Hi there! I'm Sophia, your virtual receptionist at Cote Korean Steak House. I'm here to help with table reservations, taking food orders for pickup or delivery, and providing information about our restaurant. How can I assist you today?",
                                            "timestamp": "2024-11-11T05:06:45.615287",
                                            "message_id": "dia.1731301593.fT6cGFVG"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Okay. So I want to book an order.",
                                            "timestamp": "2024-11-11T05:06:51.225919",
                                            "message_id": "Okay. So I want to book an order."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Can you help me with your many options?",
                                            "timestamp": "2024-11-11T05:06:53.730469",
                                            "message_id": "Can you help me with your many options?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Of course! Let's get started with your order. Could you please tell me which dishes you're interested in ordering from our menu today? This will help me suggest more options or confirm your choices.",
                                            "timestamp": "2024-11-11T05:06:59.973358",
                                            "message_id": "dia.1731301613.bsgHIXmI"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Okay. Can you tell me, like,",
                                            "timestamp": "2024-11-11T05:07:07.064393",
                                            "message_id": "Okay. Can you tell me, like,"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "are the menu options you have?",
                                            "timestamp": "2024-11-11T05:07:08.017518",
                                            "message_id": "are the menu options you have?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                            "timestamp": "2024-11-11T05:07:14.763742",
                                            "message_id": "dia.1731301627.GvyyOv8z"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                            "timestamp": "2024-11-11T05:07:23.723846",
                                            "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                            "timestamp": "2024-11-11T05:07:14.763742",
                                            "message_id": "dia.1731301627.GvyyOv8z"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                            "timestamp": "2024-11-11T05:07:23.723846",
                                            "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "spicy.",
                                            "timestamp": "2024-11-11T05:07:24.471512",
                                            "message_id": "spicy."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "I'd recommend trying our Spicy Beef Bulgogi or the Spicy Korean Chicken Wings. Both dishes pack a punch and are quite popular. Would you like to place an order for either of these spicy options?",
                                            "timestamp": "2024-11-11T05:07:31.442200",
                                            "message_id": "dia.1731301644.Ez3q1ui5"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Oh, yeah. So, spicy chicken wings that you mentioned.",
                                            "timestamp": "2024-11-11T05:07:40.424171",
                                            "message_id": "Oh, yeah. So, spicy chicken wings that you mentioned."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Great choice! Our Spicy Korean Chicken Wings are a customer favorite. Would you like to go ahead and place an order for those wings?",
                                            "timestamp": "2024-11-11T05:07:45.458102",
                                            "message_id": "dia.1731301660.pkrs8vlF"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yes. That's right. Go ahead and place the order.",
                                            "timestamp": "2024-11-11T05:07:51.744204",
                                            "message_id": "Yes. That's right. Go ahead and place the order."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Great! I'll place the order for our Spicy Korean Chicken Wings. Could you please provide your name, phone number, and whether this is for pickup or delivery?",
                                            "timestamp": "2024-11-11T05:07:57.954998",
                                            "message_id": "dia.1731301671.xmruoj53"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yes. So I'll pick it up. My phone number is",
                                            "timestamp": "2024-11-11T05:08:05.574647",
                                            "message_id": "Yes. So I'll pick it up. My phone number is"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "96260",
                                            "timestamp": "2024-11-11T05:08:07.455466",
                                            "message_id": "96260"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "12778.",
                                            "timestamp": "2024-11-11T05:08:08.983412",
                                            "message_id": "12778."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "And my name is Hari.",
                                            "timestamp": "2024-11-11T05:08:10.966606",
                                            "message_id": "And my name is Hari."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "And my name is Hari.",
                                            "timestamp": "2024-11-11T05:08:10.966606",
                                            "message_id": "And my name is Hari."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Thank you, Hari! Your order for our Spicy Korean Chicken Wings is confirmed for pickup. It will be ready in the next 30-45 minutes. You will receive a confirmation text shortly. Is there anything else you'd like to add to your order?",
                                            "timestamp": "2024-11-11T05:08:19.965214",
                                            "message_id": "dia.1731301690.DkHamrVu"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Nothing. All good. Thank you.",
                                            "timestamp": "2024-11-11T05:08:28.021255",
                                            "message_id": "Nothing. All good. Thank you."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Thanks for calling us, you have a great one! Bye",
                                            "timestamp": "2024-11-11T05:08:29.093613",
                                            "message_id": "dia.1731301709.wcahGaIm"
                                        }
                                    ],
                                    "transcriptSummary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                    "transcriptRecordingUrl": "https://storage.googleapis.com/trata-staging-recordings-storage/org.1726902940.GZChqlpU/fil.1731301754.8FQUmNBJ.mp3",
                                    "timestampStart": "2024-11-11T05:06:20.733912",
                                    "timestampEnd": "2024-11-11T05:08:41.585099",
                                    "conversationAnalytics": {
                                        "summary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                        "action_items": [
                                            "Confirm the order for Hari and prepare the Spicy Korean Chicken Wings for pickup.",
                                            "Send a confirmation text to Hari about his order."
                                        ],
                                        "is_audio_consent_given": false,
                                        "email_address_of_caller": "hari@gmail.com",
                                        "name_of_caller": "Hari",
                                        "phone_number_of_caller": "96260-12778",
                                        "address_of_caller": "123, Main Street, New York, NY, 10001",
                                        "sentiment_of_caller": "positive",
                                        "prospectStatus": "SERVICE_ORDER_PLACED"
                                    },
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-12-06T19:23:38.618331",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-12-06T19:23:38.618332"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "List All Conversations",
                "description": "List All Conversations",
                "operationId": "listConversationsV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "search_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field name to search by",
                            "title": "Search By"
                        },
                        "description": "Field name to search by",
                        "example": "name"
                    },
                    {
                        "name": "search_value",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Value to search for in the specified field",
                            "title": "Search Value"
                        },
                        "description": "Value to search for in the specified field",
                        "example": "search term"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by status",
                            "title": "Status"
                        },
                        "description": "Filter by status",
                        "example": "active"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Field to sort by",
                            "title": "Sort By"
                        },
                        "description": "Field to sort by",
                        "example": "createdAt"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/SortOrder"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Sort order (asc or desc)",
                            "default": "asc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order (asc or desc)"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Maximum number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of conversations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Conversation-Output"
                                    },
                                    "title": "Response Listconversationsv1"
                                },
                                "example": [
                                    {
                                        "orgId": "org.1726902940.GZChqlpU",
                                        "prospectId": "pro.1731301754.OZSMSU1S",
                                        "source": "35.191.28.74",
                                        "sourceType": "BROWSER",
                                        "aiAgentId": "aia.1726903132.obUuT7vM",
                                        "transcriptText": [
                                            {
                                                "speaker": "AI",
                                                "message": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                                "timestamp": "2024-11-11T05:06:21.049339",
                                                "message_id": "dia.1731301581.gTtTGu8J"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Hey.",
                                                "timestamp": "2024-11-11T05:06:31.737515",
                                                "message_id": "Hey."
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "What do you actually do?",
                                                "timestamp": "2024-11-11T05:06:33.756877",
                                                "message_id": "What do you actually do?"
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Hi there! I'm Sophia, your virtual receptionist at Cote Korean Steak House. I'm here to help with table reservations, taking food orders for pickup or delivery, and providing information about our restaurant. How can I assist you today?",
                                                "timestamp": "2024-11-11T05:06:45.615287",
                                                "message_id": "dia.1731301593.fT6cGFVG"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Okay. So I want to book an order.",
                                                "timestamp": "2024-11-11T05:06:51.225919",
                                                "message_id": "Okay. So I want to book an order."
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Can you help me with your many options?",
                                                "timestamp": "2024-11-11T05:06:53.730469",
                                                "message_id": "Can you help me with your many options?"
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Of course! Let's get started with your order. Could you please tell me which dishes you're interested in ordering from our menu today? This will help me suggest more options or confirm your choices.",
                                                "timestamp": "2024-11-11T05:06:59.973358",
                                                "message_id": "dia.1731301613.bsgHIXmI"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Okay. Can you tell me, like,",
                                                "timestamp": "2024-11-11T05:07:07.064393",
                                                "message_id": "Okay. Can you tell me, like,"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "are the menu options you have?",
                                                "timestamp": "2024-11-11T05:07:08.017518",
                                                "message_id": "are the menu options you have?"
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                                "timestamp": "2024-11-11T05:07:14.763742",
                                                "message_id": "dia.1731301627.GvyyOv8z"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                                "timestamp": "2024-11-11T05:07:23.723846",
                                                "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                                "timestamp": "2024-11-11T05:07:14.763742",
                                                "message_id": "dia.1731301627.GvyyOv8z"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                                "timestamp": "2024-11-11T05:07:23.723846",
                                                "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "spicy.",
                                                "timestamp": "2024-11-11T05:07:24.471512",
                                                "message_id": "spicy."
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "I'd recommend trying our Spicy Beef Bulgogi or the Spicy Korean Chicken Wings. Both dishes pack a punch and are quite popular. Would you like to place an order for either of these spicy options?",
                                                "timestamp": "2024-11-11T05:07:31.442200",
                                                "message_id": "dia.1731301644.Ez3q1ui5"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Oh, yeah. So, spicy chicken wings that you mentioned.",
                                                "timestamp": "2024-11-11T05:07:40.424171",
                                                "message_id": "Oh, yeah. So, spicy chicken wings that you mentioned."
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Great choice! Our Spicy Korean Chicken Wings are a customer favorite. Would you like to go ahead and place an order for those wings?",
                                                "timestamp": "2024-11-11T05:07:45.458102",
                                                "message_id": "dia.1731301660.pkrs8vlF"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Yes. That's right. Go ahead and place the order.",
                                                "timestamp": "2024-11-11T05:07:51.744204",
                                                "message_id": "Yes. That's right. Go ahead and place the order."
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Great! I'll place the order for our Spicy Korean Chicken Wings. Could you please provide your name, phone number, and whether this is for pickup or delivery?",
                                                "timestamp": "2024-11-11T05:07:57.954998",
                                                "message_id": "dia.1731301671.xmruoj53"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Yes. So I'll pick it up. My phone number is",
                                                "timestamp": "2024-11-11T05:08:05.574647",
                                                "message_id": "Yes. So I'll pick it up. My phone number is"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "96260",
                                                "timestamp": "2024-11-11T05:08:07.455466",
                                                "message_id": "96260"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "12778.",
                                                "timestamp": "2024-11-11T05:08:08.983412",
                                                "message_id": "12778."
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "And my name is Hari.",
                                                "timestamp": "2024-11-11T05:08:10.966606",
                                                "message_id": "And my name is Hari."
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "And my name is Hari.",
                                                "timestamp": "2024-11-11T05:08:10.966606",
                                                "message_id": "And my name is Hari."
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Thank you, Hari! Your order for our Spicy Korean Chicken Wings is confirmed for pickup. It will be ready in the next 30-45 minutes. You will receive a confirmation text shortly. Is there anything else you'd like to add to your order?",
                                                "timestamp": "2024-11-11T05:08:19.965214",
                                                "message_id": "dia.1731301690.DkHamrVu"
                                            },
                                            {
                                                "speaker": "USER",
                                                "message": "Nothing. All good. Thank you.",
                                                "timestamp": "2024-11-11T05:08:28.021255",
                                                "message_id": "Nothing. All good. Thank you."
                                            },
                                            {
                                                "speaker": "AI",
                                                "message": "Thanks for calling us, you have a great one! Bye",
                                                "timestamp": "2024-11-11T05:08:29.093613",
                                                "message_id": "dia.1731301709.wcahGaIm"
                                            }
                                        ],
                                        "transcriptSummary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                        "transcriptRecordingUrl": "https://storage.googleapis.com/trata-staging-recordings-storage/org.1726902940.GZChqlpU/fil.1731301754.8FQUmNBJ.mp3",
                                        "timestampStart": "2024-11-11T05:06:20.733912",
                                        "timestampEnd": "2024-11-11T05:08:41.585099",
                                        "conversationAnalytics": {
                                            "summary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                            "action_items": [
                                                "Confirm the order for Hari and prepare the Spicy Korean Chicken Wings for pickup.",
                                                "Send a confirmation text to Hari about his order."
                                            ],
                                            "is_audio_consent_given": false,
                                            "email_address_of_caller": "hari@gmail.com",
                                            "name_of_caller": "Hari",
                                            "phone_number_of_caller": "96260-12778",
                                            "address_of_caller": "123, Main Street, New York, NY, 10001",
                                            "sentiment_of_caller": "positive",
                                            "prospectStatus": "SERVICE_ORDER_PLACED"
                                        },
                                        "status": "active",
                                        "createdBy": "trata-system",
                                        "createdAt": "2024-12-06T19:23:38.618331",
                                        "updatedBy": "trata-system",
                                        "updatedAt": "2024-12-06T19:23:38.618332"
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/conversations/{conversation_id}": {
            "get": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Get a Specific Conversation by ID",
                "description": "Get a Specific Conversation by ID",
                "operationId": "getConversationV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the conversation",
                            "title": "Conversation Id"
                        },
                        "description": "ID of the conversation"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation-Output"
                                },
                                "example": {
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "prospectId": "pro.1731301754.OZSMSU1S",
                                    "source": "35.191.28.74",
                                    "sourceType": "BROWSER",
                                    "aiAgentId": "aia.1726903132.obUuT7vM",
                                    "transcriptText": [
                                        {
                                            "speaker": "AI",
                                            "message": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                            "timestamp": "2024-11-11T05:06:21.049339",
                                            "message_id": "dia.1731301581.gTtTGu8J"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Hey.",
                                            "timestamp": "2024-11-11T05:06:31.737515",
                                            "message_id": "Hey."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "What do you actually do?",
                                            "timestamp": "2024-11-11T05:06:33.756877",
                                            "message_id": "What do you actually do?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Hi there! I'm Sophia, your virtual receptionist at Cote Korean Steak House. I'm here to help with table reservations, taking food orders for pickup or delivery, and providing information about our restaurant. How can I assist you today?",
                                            "timestamp": "2024-11-11T05:06:45.615287",
                                            "message_id": "dia.1731301593.fT6cGFVG"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Okay. So I want to book an order.",
                                            "timestamp": "2024-11-11T05:06:51.225919",
                                            "message_id": "Okay. So I want to book an order."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Can you help me with your many options?",
                                            "timestamp": "2024-11-11T05:06:53.730469",
                                            "message_id": "Can you help me with your many options?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Of course! Let's get started with your order. Could you please tell me which dishes you're interested in ordering from our menu today? This will help me suggest more options or confirm your choices.",
                                            "timestamp": "2024-11-11T05:06:59.973358",
                                            "message_id": "dia.1731301613.bsgHIXmI"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Okay. Can you tell me, like,",
                                            "timestamp": "2024-11-11T05:07:07.064393",
                                            "message_id": "Okay. Can you tell me, like,"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "are the menu options you have?",
                                            "timestamp": "2024-11-11T05:07:08.017518",
                                            "message_id": "are the menu options you have?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                            "timestamp": "2024-11-11T05:07:14.763742",
                                            "message_id": "dia.1731301627.GvyyOv8z"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                            "timestamp": "2024-11-11T05:07:23.723846",
                                            "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                            "timestamp": "2024-11-11T05:07:14.763742",
                                            "message_id": "dia.1731301627.GvyyOv8z"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                            "timestamp": "2024-11-11T05:07:23.723846",
                                            "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "spicy.",
                                            "timestamp": "2024-11-11T05:07:24.471512",
                                            "message_id": "spicy."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "I'd recommend trying our Spicy Beef Bulgogi or the Spicy Korean Chicken Wings. Both dishes pack a punch and are quite popular. Would you like to place an order for either of these spicy options?",
                                            "timestamp": "2024-11-11T05:07:31.442200",
                                            "message_id": "dia.1731301644.Ez3q1ui5"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Oh, yeah. So, spicy chicken wings that you mentioned.",
                                            "timestamp": "2024-11-11T05:07:40.424171",
                                            "message_id": "Oh, yeah. So, spicy chicken wings that you mentioned."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Great choice! Our Spicy Korean Chicken Wings are a customer favorite. Would you like to go ahead and place an order for those wings?",
                                            "timestamp": "2024-11-11T05:07:45.458102",
                                            "message_id": "dia.1731301660.pkrs8vlF"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yes. That's right. Go ahead and place the order.",
                                            "timestamp": "2024-11-11T05:07:51.744204",
                                            "message_id": "Yes. That's right. Go ahead and place the order."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Great! I'll place the order for our Spicy Korean Chicken Wings. Could you please provide your name, phone number, and whether this is for pickup or delivery?",
                                            "timestamp": "2024-11-11T05:07:57.954998",
                                            "message_id": "dia.1731301671.xmruoj53"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yes. So I'll pick it up. My phone number is",
                                            "timestamp": "2024-11-11T05:08:05.574647",
                                            "message_id": "Yes. So I'll pick it up. My phone number is"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "96260",
                                            "timestamp": "2024-11-11T05:08:07.455466",
                                            "message_id": "96260"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "12778.",
                                            "timestamp": "2024-11-11T05:08:08.983412",
                                            "message_id": "12778."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "And my name is Hari.",
                                            "timestamp": "2024-11-11T05:08:10.966606",
                                            "message_id": "And my name is Hari."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "And my name is Hari.",
                                            "timestamp": "2024-11-11T05:08:10.966606",
                                            "message_id": "And my name is Hari."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Thank you, Hari! Your order for our Spicy Korean Chicken Wings is confirmed for pickup. It will be ready in the next 30-45 minutes. You will receive a confirmation text shortly. Is there anything else you'd like to add to your order?",
                                            "timestamp": "2024-11-11T05:08:19.965214",
                                            "message_id": "dia.1731301690.DkHamrVu"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Nothing. All good. Thank you.",
                                            "timestamp": "2024-11-11T05:08:28.021255",
                                            "message_id": "Nothing. All good. Thank you."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Thanks for calling us, you have a great one! Bye",
                                            "timestamp": "2024-11-11T05:08:29.093613",
                                            "message_id": "dia.1731301709.wcahGaIm"
                                        }
                                    ],
                                    "transcriptSummary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                    "transcriptRecordingUrl": "https://storage.googleapis.com/trata-staging-recordings-storage/org.1726902940.GZChqlpU/fil.1731301754.8FQUmNBJ.mp3",
                                    "timestampStart": "2024-11-11T05:06:20.733912",
                                    "timestampEnd": "2024-11-11T05:08:41.585099",
                                    "conversationAnalytics": {
                                        "summary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                        "action_items": [
                                            "Confirm the order for Hari and prepare the Spicy Korean Chicken Wings for pickup.",
                                            "Send a confirmation text to Hari about his order."
                                        ],
                                        "is_audio_consent_given": false,
                                        "email_address_of_caller": "hari@gmail.com",
                                        "name_of_caller": "Hari",
                                        "phone_number_of_caller": "96260-12778",
                                        "address_of_caller": "123, Main Street, New York, NY, 10001",
                                        "sentiment_of_caller": "positive",
                                        "prospectStatus": "SERVICE_ORDER_PLACED"
                                    },
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-12-06T19:23:38.618331",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-12-06T19:23:38.618332"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Update a Specific Conversation by ID",
                "description": "Update a Specific Conversation by ID",
                "operationId": "updateConversationV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the conversation",
                            "title": "Conversation Id"
                        },
                        "description": "ID of the conversation"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Conversation-Input"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Conversation-Output"
                                },
                                "example": {
                                    "orgId": "org.1726902940.GZChqlpU",
                                    "prospectId": "pro.1731301754.OZSMSU1S",
                                    "source": "35.191.28.74",
                                    "sourceType": "BROWSER",
                                    "aiAgentId": "aia.1726903132.obUuT7vM",
                                    "transcriptText": [
                                        {
                                            "speaker": "AI",
                                            "message": "Hi, thanks for calling the Restaurant. I am Sophia, the Restaurant manager powered by AI, how may I assist you today?",
                                            "timestamp": "2024-11-11T05:06:21.049339",
                                            "message_id": "dia.1731301581.gTtTGu8J"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Hey.",
                                            "timestamp": "2024-11-11T05:06:31.737515",
                                            "message_id": "Hey."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "What do you actually do?",
                                            "timestamp": "2024-11-11T05:06:33.756877",
                                            "message_id": "What do you actually do?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Hi there! I'm Sophia, your virtual receptionist at Cote Korean Steak House. I'm here to help with table reservations, taking food orders for pickup or delivery, and providing information about our restaurant. How can I assist you today?",
                                            "timestamp": "2024-11-11T05:06:45.615287",
                                            "message_id": "dia.1731301593.fT6cGFVG"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Okay. So I want to book an order.",
                                            "timestamp": "2024-11-11T05:06:51.225919",
                                            "message_id": "Okay. So I want to book an order."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Can you help me with your many options?",
                                            "timestamp": "2024-11-11T05:06:53.730469",
                                            "message_id": "Can you help me with your many options?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Of course! Let's get started with your order. Could you please tell me which dishes you're interested in ordering from our menu today? This will help me suggest more options or confirm your choices.",
                                            "timestamp": "2024-11-11T05:06:59.973358",
                                            "message_id": "dia.1731301613.bsgHIXmI"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Okay. Can you tell me, like,",
                                            "timestamp": "2024-11-11T05:07:07.064393",
                                            "message_id": "Okay. Can you tell me, like,"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "are the menu options you have?",
                                            "timestamp": "2024-11-11T05:07:08.017518",
                                            "message_id": "are the menu options you have?"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                            "timestamp": "2024-11-11T05:07:14.763742",
                                            "message_id": "dia.1731301627.GvyyOv8z"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                            "timestamp": "2024-11-11T05:07:23.723846",
                                            "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Certainly! At Cote Korean Steak House, we offer a variety of delicious Korean-inspired dishes. Could you let me know if you're looking for something specific, or would you like a recommendation?",
                                            "timestamp": "2024-11-11T05:07:14.763742",
                                            "message_id": "dia.1731301627.GvyyOv8z"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yeah. So recommendation would be helpful, and it has to be, like,",
                                            "timestamp": "2024-11-11T05:07:23.723846",
                                            "message_id": "Yeah. So recommendation would be helpful, and it has to be, like,"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "spicy.",
                                            "timestamp": "2024-11-11T05:07:24.471512",
                                            "message_id": "spicy."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "I'd recommend trying our Spicy Beef Bulgogi or the Spicy Korean Chicken Wings. Both dishes pack a punch and are quite popular. Would you like to place an order for either of these spicy options?",
                                            "timestamp": "2024-11-11T05:07:31.442200",
                                            "message_id": "dia.1731301644.Ez3q1ui5"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Oh, yeah. So, spicy chicken wings that you mentioned.",
                                            "timestamp": "2024-11-11T05:07:40.424171",
                                            "message_id": "Oh, yeah. So, spicy chicken wings that you mentioned."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Great choice! Our Spicy Korean Chicken Wings are a customer favorite. Would you like to go ahead and place an order for those wings?",
                                            "timestamp": "2024-11-11T05:07:45.458102",
                                            "message_id": "dia.1731301660.pkrs8vlF"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yes. That's right. Go ahead and place the order.",
                                            "timestamp": "2024-11-11T05:07:51.744204",
                                            "message_id": "Yes. That's right. Go ahead and place the order."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Great! I'll place the order for our Spicy Korean Chicken Wings. Could you please provide your name, phone number, and whether this is for pickup or delivery?",
                                            "timestamp": "2024-11-11T05:07:57.954998",
                                            "message_id": "dia.1731301671.xmruoj53"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Yes. So I'll pick it up. My phone number is",
                                            "timestamp": "2024-11-11T05:08:05.574647",
                                            "message_id": "Yes. So I'll pick it up. My phone number is"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "96260",
                                            "timestamp": "2024-11-11T05:08:07.455466",
                                            "message_id": "96260"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "12778.",
                                            "timestamp": "2024-11-11T05:08:08.983412",
                                            "message_id": "12778."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "And my name is Hari.",
                                            "timestamp": "2024-11-11T05:08:10.966606",
                                            "message_id": "And my name is Hari."
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "And my name is Hari.",
                                            "timestamp": "2024-11-11T05:08:10.966606",
                                            "message_id": "And my name is Hari."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Thank you, Hari! Your order for our Spicy Korean Chicken Wings is confirmed for pickup. It will be ready in the next 30-45 minutes. You will receive a confirmation text shortly. Is there anything else you'd like to add to your order?",
                                            "timestamp": "2024-11-11T05:08:19.965214",
                                            "message_id": "dia.1731301690.DkHamrVu"
                                        },
                                        {
                                            "speaker": "USER",
                                            "message": "Nothing. All good. Thank you.",
                                            "timestamp": "2024-11-11T05:08:28.021255",
                                            "message_id": "Nothing. All good. Thank you."
                                        },
                                        {
                                            "speaker": "AI",
                                            "message": "Thanks for calling us, you have a great one! Bye",
                                            "timestamp": "2024-11-11T05:08:29.093613",
                                            "message_id": "dia.1731301709.wcahGaIm"
                                        }
                                    ],
                                    "transcriptSummary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                    "transcriptRecordingUrl": "https://storage.googleapis.com/trata-staging-recordings-storage/org.1726902940.GZChqlpU/fil.1731301754.8FQUmNBJ.mp3",
                                    "timestampStart": "2024-11-11T05:06:20.733912",
                                    "timestampEnd": "2024-11-11T05:08:41.585099",
                                    "conversationAnalytics": {
                                        "summary": "The caller, Hari, called to place an order at Cote Korean Steak House. He requested recommendations for spicy menu items and chose the Spicy Korean Chicken Wings for pick-up. His phone number is 96260-12778. The order is confirmed for pickup within 30-45 minutes.",
                                        "action_items": [
                                            "Confirm the order for Hari and prepare the Spicy Korean Chicken Wings for pickup.",
                                            "Send a confirmation text to Hari about his order."
                                        ],
                                        "is_audio_consent_given": false,
                                        "email_address_of_caller": "hari@gmail.com",
                                        "name_of_caller": "Hari",
                                        "phone_number_of_caller": "96260-12778",
                                        "address_of_caller": "123, Main Street, New York, NY, 10001",
                                        "sentiment_of_caller": "positive",
                                        "prospectStatus": "SERVICE_ORDER_PLACED"
                                    },
                                    "status": "active",
                                    "createdBy": "trata-system",
                                    "createdAt": "2024-12-06T19:23:38.618331",
                                    "updatedBy": "trata-system",
                                    "updatedAt": "2024-12-06T19:23:38.618332"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Delete a Specific Conversation by ID",
                "description": "Delete a Specific Conversation by ID",
                "operationId": "deleteConversationV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the conversation",
                            "title": "Conversation Id"
                        },
                        "description": "ID of the conversation"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                },
                                "example": {
                                    "message": "Success"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/conversations/{conversation_id}/feedback": {
            "post": {
                "tags": [
                    "Conversations"
                ],
                "summary": "Add Feedback to a Specific Conversation",
                "description": "Add Feedback to a Specific Conversation",
                "operationId": "addFeedbackV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the conversation",
                            "title": "Conversation Id"
                        },
                        "description": "ID of the conversation"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            },
                            "example": {
                                "comment": "Great service!"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Feedback added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationFeedback"
                                },
                                "example": {
                                    "id": "cfb.1234567890",
                                    "conversationId": "con.1234567890",
                                    "comment": "Great service!",
                                    "createdAt": "2024-01-01T00:00:00.000Z",
                                    "createdBy": "usr.1234567890"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/conversations/{conversation_id}/prospects/{prospect_id}/links": {
            "post": {
                "tags": [
                    "ConversationProspectLink"
                ],
                "summary": "Create a link between a conversation and a prospect",
                "description": "Create a link between a conversation and a prospect",
                "operationId": "createConversationProspectLinkV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the conversation",
                            "title": "Conversation Id"
                        },
                        "description": "ID of the conversation"
                    },
                    {
                        "name": "prospect_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the prospect",
                            "title": "Prospect Id"
                        },
                        "description": "ID of the prospect"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ConversationProspectLink"
                ],
                "summary": "Delete a link between a conversation and a prospect",
                "description": "Delete a link between a conversation and a prospect",
                "operationId": "deleteConversationProspectLinkV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the conversation",
                            "title": "Conversation Id"
                        },
                        "description": "ID of the conversation"
                    },
                    {
                        "name": "prospect_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the prospect",
                            "title": "Prospect Id"
                        },
                        "description": "ID of the prospect"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/prospects/{prospect_id}/conversations": {
            "get": {
                "tags": [
                    "ConversationProspectLink"
                ],
                "summary": "List all conversations linked to a specific prospect",
                "description": "List all conversations linked to a specific prospect",
                "operationId": "listConversationsOfProspectsV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "prospect_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "ID of the prospect",
                            "title": "Prospect Id"
                        },
                        "description": "ID of the prospect"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Conversation-Output"
                                    },
                                    "title": "Response Listconversationsofprospectsv1"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/files": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Upload Files",
                "description": "Upload file to Trata account to use in AI Agents",
                "operationId": "uploadFileV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_uploadFileV1"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Files"
                                    },
                                    "title": "Response Uploadfilev1"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Files"
                ],
                "summary": "Delete Files",
                "description": "Delete files from Trata account",
                "operationId": "deleteFileV1",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "file_ids",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "File Ids"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Deletefilev1"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/connections": {
            "post": {
                "tags": [
                    "Data Plane"
                ],
                "summary": "Create Connection",
                "description": "Create a new connection for an AI Agent to start a voice conversation",
                "operationId": "createConnection",
                "security": [
                    {
                        "HTTPBearer": []
                    }
                ],
                "parameters": [
                    {
                        "name": "agentId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Agentid"
                        }
                    },
                    {
                        "name": "prospect_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "Prospect Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionSource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Connection"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/connections/{connection_id}/plivo-audio-stream-xml": {
            "get": {
                "tags": [
                    "Data Plane"
                ],
                "summary": "Get Audio Stream XML For Plivo",
                "description": "Get the audio stream xml for Plivo to start a voice conversation",
                "operationId": "getPlivoAudioStreamXml",
                "parameters": [
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Connection Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Heart Beat Check For Trata Backend",
                "description": "Heart Beat check to check the health of Trata Backend",
                "operationId": "status_status_get",
                "responses": {
                    "200": {
                        "description": "Trata APIs are healthy",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Status Status Get"
                                },
                                "example": {
                                    "status": "HEALTHY"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AIAgent-Input": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the AI agent",
                        "example": "HelperBot"
                    },
                    "imageUrl": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Imageurl",
                        "description": "Image URL for the AI agent",
                        "example": "http://example.com/agent.png"
                    },
                    "mission": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Mission"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Mission of the AI agent"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status"
                            }
                        ],
                        "description": "Status of the AI agent"
                    },
                    "role": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Role",
                        "description": "Role of the AI agent in the company",
                        "example": "Customer Support"
                    },
                    "roleDescription": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Roledescription",
                        "description": "Description of the role of the AI agent",
                        "example": "Handles customer inquiries and support tasks"
                    },
                    "timezone": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Timezone",
                        "description": "Timezone of the AI agent used for scheduling meetings",
                        "example": "America/New_York"
                    },
                    "voice": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Voice-Input"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Voice of the AI agent"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "imageUrl",
                    "status",
                    "role",
                    "roleDescription",
                    "timezone"
                ],
                "title": "AIAgent"
            },
            "AIAgent-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "imageUrl": {
                        "type": "string",
                        "title": "Imageurl"
                    },
                    "mission": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Mission"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "role": {
                        "type": "string",
                        "title": "Role"
                    },
                    "roleDescription": {
                        "type": "string",
                        "title": "Roledescription"
                    },
                    "transcriber": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Transcriber"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "intelligenceProvider": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/IntelligenceProvider"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "voice": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Voice-Output"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "timezone": {
                        "type": "string",
                        "title": "Timezone"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "title": "AIAgent",
                "description": "AI agent configured by businesses"
            },
            "Accent": {
                "type": "string",
                "enum": [
                    "American",
                    "Indian",
                    "Australian",
                    "British",
                    "Hindi"
                ],
                "title": "Accent"
            },
            "Action-Input": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the action",
                        "example": "get_delivery_date"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description about the action and it should also contain when the action should be triggered",
                        "example": "Get the delivery date for a customer's order. Call this whenever you need to know the delivery date, for example when a customer asks 'Where is my package'"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters",
                        "description": "Parameters for the action. It should be a JSON schema object",
                        "example": false
                    },
                    "endpoint": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/HttpActionEndpoint"
                            },
                            {
                                "$ref": "#/components/schemas/InternalActionEndpoint"
                            }
                        ],
                        "title": "Endpoint",
                        "description": "Endpoint for the action"
                    },
                    "userWaitingText": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2048,
                                "minLength": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Userwaitingtext",
                        "description": "Text to be rendered to user when action is invoked",
                        "example": "Please wait while we get the delivery date for your order"
                    },
                    "userSuccessText": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2048,
                                "minLength": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Usersuccesstext",
                        "description": "Text to be rendered to user when action is successful",
                        "example": "We have sent you an email with the delivery date"
                    },
                    "userErrorText": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2048,
                                "minLength": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Usererrortext",
                        "description": "Text to be rendered to user when action is not successful",
                        "example": "We are unable to get the delivery date for your order"
                    },
                    "invocationTrigger": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ActionInvocationTrigger"
                            }
                        ],
                        "description": "Trigger who invokes the action"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "parameters",
                    "endpoint",
                    "invocationTrigger"
                ],
                "title": "Action"
            },
            "ActionInvocationTrigger": {
                "type": "string",
                "enum": [
                    "user_query",
                    "webhook.conversation_start",
                    "webhook.conversation_end"
                ],
                "title": "ActionInvocationTrigger"
            },
            "AggregationFormula": {
                "type": "string",
                "enum": [
                    "COUNT",
                    "SUM",
                    "MEDIAN"
                ],
                "title": "AggregationFormula"
            },
            "AggregationPeriod": {
                "type": "string",
                "enum": [
                    "MONTHLY",
                    "WEEKLY",
                    "DAILY"
                ],
                "title": "AggregationPeriod"
            },
            "BaseResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Message",
                        "description": "Address line 1",
                        "example": "link"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "BaseResponse"
            },
            "BatchMetricsRequests": {
                "properties": {
                    "requests": {
                        "items": {
                            "$ref": "#/components/schemas/MetricsRequest"
                        },
                        "type": "array",
                        "title": "Requests"
                    }
                },
                "type": "object",
                "required": [
                    "requests"
                ],
                "title": "BatchMetricsRequests"
            },
            "BatchMetricsResponse": {
                "properties": {
                    "responses": {
                        "items": {
                            "$ref": "#/components/schemas/MetricsResponse"
                        },
                        "type": "array",
                        "title": "Responses"
                    }
                },
                "type": "object",
                "required": [
                    "responses"
                ],
                "title": "BatchMetricsResponse"
            },
            "Body_uploadFileV1": {
                "properties": {
                    "files": {
                        "items": {
                            "type": "string",
                            "format": "binary"
                        },
                        "type": "array",
                        "title": "Files"
                    }
                },
                "type": "object",
                "required": [
                    "files"
                ],
                "title": "Body_uploadFileV1"
            },
            "CallSentiment": {
                "type": "string",
                "enum": [
                    "positive",
                    "negative",
                    "neutral"
                ],
                "title": "CallSentiment"
            },
            "Comment": {
                "properties": {
                    "comment": {
                        "type": "string",
                        "maxLength": 8192,
                        "minLength": 1,
                        "title": "Comment",
                        "description": "Notes or comments to record",
                        "example": "good"
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5.0,
                        "minimum": 1.0,
                        "title": "Rating",
                        "description": "Star rating to record",
                        "example": 5
                    }
                },
                "type": "object",
                "required": [
                    "comment",
                    "rating"
                ],
                "title": "Comment"
            },
            "Connection": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "sourceName": {
                        "type": "string",
                        "title": "Sourcename"
                    },
                    "sourceId": {
                        "type": "string",
                        "title": "Sourceid"
                    },
                    "sourceProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sourceprops"
                    },
                    "agentId": {
                        "type": "string",
                        "title": "Agentid"
                    },
                    "prospectId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prospectid"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "title": "Connection",
                "description": "This represents the connection between the user and the assistant"
            },
            "ConnectionSource": {
                "properties": {
                    "sourceName": {
                        "type": "string",
                        "enum": [
                            "TWILIO",
                            "PLIVO",
                            "BROWSER"
                        ],
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Sourcename",
                        "description": "Name of the source",
                        "default": "BROWSER",
                        "example": "TWILIO"
                    },
                    "sourceId": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Sourceid",
                        "description": "Unique identifier for the source",
                        "example": "id_123"
                    },
                    "sourceProps": {
                        "type": "object",
                        "maxProperties": 512,
                        "minProperties": 0,
                        "title": "Sourceprops",
                        "description": "Extra properties of source",
                        "example": "Browser"
                    }
                },
                "type": "object",
                "required": [
                    "sourceId",
                    "sourceProps"
                ],
                "title": "ConnectionSource"
            },
            "Conversation-Input": {
                "properties": {
                    "source": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Source",
                        "description": "Source from where the conversation originated. This can be device id, phone number, etc.",
                        "example": "device12345"
                    },
                    "sourceType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConversationSourceType"
                            }
                        ],
                        "description": "Type of the conversation source"
                    },
                    "agentId": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Agentid",
                        "description": "AI agent which handled the conversation",
                        "example": "aia.1719914136.zl2fxvXB"
                    },
                    "transcriptText": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DialogLine"
                                },
                                "type": "array",
                                "maxItems": 512,
                                "minItems": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcripttext",
                        "description": "URL to the full transcript of the conversation",
                        "example": "http://example.com/transcript"
                    },
                    "transcriptSummary": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 2048,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcriptsummary",
                        "description": "Summary of the conversation",
                        "example": "The conversation was about resolving billing issues."
                    },
                    "transcriptRecordingUrl": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcriptrecordingurl",
                        "description": "URL to the recording of the conversation",
                        "example": "http://example.com/recording"
                    },
                    "timestampStart": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestampstart",
                        "description": "Start time of the conversation"
                    },
                    "timestampEnd": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Timestampend",
                        "description": "End time of the conversation"
                    },
                    "conversationAnalytics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ConversationAnalyticsModel"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Analytics of the conversation"
                    },
                    "adminComments": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Comment"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Admincomments",
                        "description": "Comments from the admin on the conversation"
                    }
                },
                "type": "object",
                "required": [
                    "source",
                    "sourceType",
                    "agentId",
                    "timestampStart"
                ],
                "title": "Conversation"
            },
            "Conversation-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "prospectId": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prospectid"
                    },
                    "source": {
                        "type": "string",
                        "title": "Source"
                    },
                    "sourceType": {
                        "type": "string",
                        "title": "Sourcetype"
                    },
                    "aiAgentId": {
                        "type": "string",
                        "title": "Aiagentid"
                    },
                    "transcriptText": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/DialogLine"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcripttext"
                    },
                    "transcriptSummary": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcriptsummary"
                    },
                    "transcriptRecordingUrl": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcriptrecordingurl"
                    },
                    "timestampStart": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestampstart"
                    },
                    "timestampEnd": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Timestampend"
                    },
                    "conversationAnalytics": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ConversationAnalyticsModel"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Analytics of the conversation"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "Conversation",
                "description": "Any conversation happening between the end user and assistant is stored in this table"
            },
            "ConversationAnalyticsModel": {
                "properties": {
                    "summary": {
                        "type": "string",
                        "title": "Summary",
                        "description": "Summary of the conversation happened with important details on the conversation. The summary should be concise and to the point. It should contain the important details of the conversation like name, phone number, email, address and any other details shared by the user."
                    },
                    "action_items": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Action Items",
                        "description": "List of action items and the next steps to be performed from the conversation details."
                    },
                    "is_audio_consent_given": {
                        "type": "boolean",
                        "title": "Is Audio Consent Given",
                        "description": "If the user has given consent to store the audio of the conversation. Unless the user explicitly says yes, this should be false."
                    },
                    "email_address_of_caller": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email Address Of Caller",
                        "description": "Extracted email address of the caller from the conversation details. Email should be a valid email address format"
                    },
                    "name_of_caller": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name Of Caller",
                        "description": "Extracted name of the caller from the conversation details."
                    },
                    "phone_number_of_caller": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone Number Of Caller",
                        "description": "Extracted phone number of the caller from the conversation details."
                    },
                    "address_of_caller": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Address Of Caller",
                        "description": "Extracted address of the caller from the conversation details."
                    },
                    "sentiment_of_caller": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CallSentiment"
                            }
                        ],
                        "description": "Sentiment of the caller based on the conversation details."
                    },
                    "prospectStatus": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ProspectStatus"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "description": "Status of the prospect after this conversation."
                    }
                },
                "additionalProperties": false,
                "type": "object",
                "required": [
                    "summary",
                    "action_items",
                    "is_audio_consent_given",
                    "email_address_of_caller",
                    "name_of_caller",
                    "phone_number_of_caller",
                    "address_of_caller",
                    "sentiment_of_caller",
                    "prospectStatus"
                ],
                "title": "ConversationAnalyticsModel",
                "description": "Expected output of the post conversation task"
            },
            "ConversationFeedback": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "conversationId": {
                        "type": "string",
                        "title": "Conversationid"
                    },
                    "feedback": {
                        "type": "string",
                        "title": "Feedback"
                    },
                    "rating": {
                        "type": "integer",
                        "title": "Rating"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "title": "ConversationFeedback",
                "description": "Any feedback added to the conversation by business is managed here."
            },
            "ConversationSourceType": {
                "type": "string",
                "enum": [
                    "BROWSER",
                    "TWILIO",
                    "PLIVO"
                ],
                "title": "ConversationSourceType"
            },
            "DialogLine": {
                "properties": {
                    "speaker": {
                        "type": "string",
                        "title": "Speaker"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp"
                    },
                    "message_id": {
                        "type": "string",
                        "title": "Message Id"
                    }
                },
                "type": "object",
                "required": [
                    "speaker",
                    "message",
                    "timestamp",
                    "message_id"
                ],
                "title": "DialogLine"
            },
            "ExternalReference": {
                "properties": {
                    "providerName": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Providername",
                        "description": "External service provider name",
                        "example": "Google Analytics"
                    },
                    "id": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Id",
                        "description": "External service identifier",
                        "example": "GA-123456"
                    },
                    "providerProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Providerprops",
                        "description": "Props for the external reference",
                        "example": "abcdefg"
                    }
                },
                "type": "object",
                "required": [
                    "providerName",
                    "id"
                ],
                "title": "ExternalReference"
            },
            "Files": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "fileName": {
                        "type": "string",
                        "title": "Filename"
                    },
                    "fileUrl": {
                        "type": "string",
                        "title": "Fileurl"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "title": "Files",
                "description": "Stores the map of file id with respective file URL in storage manager"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Hive": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "content": {
                        "$ref": "#/components/schemas/HiveContent-Output"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "required": [
                    "content",
                    "status"
                ],
                "title": "Hive",
                "description": "Reference to all business knowledge base will be stored in Hive"
            },
            "HiveContent-Output": {
                "properties": {
                    "hiveType": {
                        "$ref": "#/components/schemas/HiveType"
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL of the content"
                    },
                    "files": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Files"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Files",
                        "description": "List of files to be referenced for the hive"
                    },
                    "hiveProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hiveprops",
                        "description": "To recursively crawl child pages, add this as props {\"crawl_child_pages\": true},  \"depth\": \"3\""
                    },
                    "internalProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internalprops",
                        "description": "To add any internal props, add this as props {\"last_crawl_time\": \"123123123123\"}"
                    }
                },
                "type": "object",
                "required": [
                    "hiveType"
                ],
                "title": "HiveContent"
            },
            "HiveType": {
                "type": "string",
                "enum": [
                    "WEBSITE",
                    "GOOGLE_DOCS",
                    "DOCS",
                    "TRANSCRIPTS"
                ],
                "title": "HiveType"
            },
            "HttpActionEndpoint": {
                "properties": {
                    "url": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Url",
                        "description": "Action endpoint URL",
                        "example": "http://example.com/api/action"
                    },
                    "method": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "POST"
                        ],
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Method",
                        "description": "Method to be used for invoking the endpoint",
                        "default": "POST",
                        "example": "POST"
                    },
                    "headers": {
                        "anyOf": [
                            {
                                "type": "object",
                                "maxProperties": 512,
                                "minProperties": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Headers",
                        "description": "Headers for the endpoint",
                        "example": "application/json"
                    },
                    "payload": {
                        "anyOf": [
                            {
                                "type": "object",
                                "maxProperties": 512,
                                "minProperties": 0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Payload",
                        "description": "Payload for the endpoint",
                        "example": "123456"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ],
                "title": "HttpActionEndpoint"
            },
            "IntelligenceProvider": {
                "properties": {
                    "providerName": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Providername"
                    },
                    "model": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Model"
                    },
                    "providerProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Providerprops"
                    }
                },
                "type": "object",
                "title": "IntelligenceProvider"
            },
            "InternalActionEndpoint": {
                "properties": {
                    "module": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Module",
                        "description": "Module where the action is defined",
                        "example": "trata.actions.get_delivery_date"
                    },
                    "function": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Function",
                        "description": "Function to be called inside the module",
                        "example": "get_delivery_date"
                    }
                },
                "type": "object",
                "required": [
                    "module",
                    "function"
                ],
                "title": "InternalActionEndpoint",
                "description": "Internal action endpoint to be used for calling the action inside the module. Not used by external users"
            },
            "Language": {
                "type": "string",
                "enum": [
                    "English",
                    "Spanish",
                    "Hindi"
                ],
                "title": "Language"
            },
            "LanguageAccentCombo": {
                "properties": {
                    "language": {
                        "$ref": "#/components/schemas/Language"
                    },
                    "accent": {
                        "$ref": "#/components/schemas/Accent"
                    }
                },
                "type": "object",
                "required": [
                    "language",
                    "accent"
                ],
                "title": "LanguageAccentCombo"
            },
            "MetricName": {
                "type": "string",
                "enum": [
                    "CALLS",
                    "CALL_DURATION",
                    "APPOINTMENT_SCHEDULED",
                    "PROSPECTS",
                    "INTERESTED",
                    "NOT_INTERESTED"
                ],
                "title": "MetricName"
            },
            "MetricResponseDataPoint": {
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "format": "date",
                        "title": "Timestamp",
                        "description": "Timestamp of the data point"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value",
                        "description": "Value which will be a string representation of integer or floating number"
                    }
                },
                "type": "object",
                "required": [
                    "timestamp",
                    "value"
                ],
                "title": "MetricResponseDataPoint"
            },
            "MetricsRequest": {
                "properties": {
                    "id": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Id",
                        "description": "Unique identifier for the metric request. This can be helped to co-relate the request and response"
                    },
                    "name": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MetricName"
                            }
                        ],
                        "description": "Name of the metric"
                    },
                    "fromDate": {
                        "type": "string",
                        "format": "date",
                        "title": "Fromdate",
                        "description": "Start date to get metric request"
                    },
                    "toDate": {
                        "type": "string",
                        "format": "date",
                        "title": "Todate",
                        "description": "End date until get metric request"
                    },
                    "aggregationPeriod": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationPeriod"
                            }
                        ],
                        "description": "Aggregation period for the metric request"
                    },
                    "aggregationFormula": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationFormula"
                            }
                        ],
                        "description": "Aggregation formula for the metric request"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "fromDate",
                    "toDate",
                    "aggregationPeriod",
                    "aggregationFormula"
                ],
                "title": "MetricsRequest"
            },
            "MetricsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Id",
                        "description": "Unique identifier for the metric response. This will help co-relate the request and response"
                    },
                    "name": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MetricName"
                            }
                        ],
                        "description": "Name of the metric"
                    },
                    "datapoints": {
                        "items": {
                            "$ref": "#/components/schemas/MetricResponseDataPoint"
                        },
                        "type": "array",
                        "title": "Datapoints",
                        "description": "List of data points for the metric response"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "datapoints"
                ],
                "title": "MetricsResponse"
            },
            "Mission": {
                "properties": {
                    "prompt": {
                        "anyOf": [
                            {
                                "type": "string",
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prompt",
                        "description": "Full prompt instructions for LLM model",
                        "example": "Check Trata AI docs on the specifics of prompting."
                    },
                    "objective": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1024,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Objective",
                        "description": "Objective of the mission",
                        "example": "This is a more easier version where the user dont have to given the entire prompt but just share the objective of the call and rest will be handled by Trata."
                    },
                    "greeting": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1024,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Greeting",
                        "description": "Greeting message to be read by the AI agent",
                        "example": "Hello! Thank you for taking the time to speak with me today."
                    },
                    "sequence": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Sequence"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sequence",
                        "description": "Sequence of actions to be performed by the AI agent during the conversation."
                    },
                    "farewell": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1024,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Farewell",
                        "description": "Conclusion message to be read by the AI agent"
                    }
                },
                "type": "object",
                "required": [
                    "greeting"
                ],
                "title": "Mission"
            },
            "Product-Input": {
                "properties": {
                    "active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Product is active or not"
                    },
                    "defaultPrice": {
                        "type": "integer",
                        "title": "Defaultprice",
                        "description": "Default price of the product this is represented in the lowest currency denomination. Eg: 1000 for $10"
                    },
                    "currency": {
                        "type": "string",
                        "enum": [
                            "AED",
                            "AFN",
                            "ALL",
                            "AMD",
                            "ANG",
                            "AOA",
                            "ARS",
                            "AUD",
                            "AWG",
                            "AZN",
                            "BAM",
                            "BBD",
                            "BDT",
                            "BGN",
                            "BHD",
                            "BIF",
                            "BMD",
                            "BND",
                            "BOB",
                            "BOV",
                            "BRL",
                            "BSD",
                            "BTN",
                            "BWP",
                            "BYN",
                            "BZD",
                            "CAD",
                            "CDF",
                            "CHE",
                            "CHF",
                            "CHW",
                            "CLF",
                            "CLP",
                            "CNY",
                            "COP",
                            "COU",
                            "CRC",
                            "CUC",
                            "CUP",
                            "CVE",
                            "CZK",
                            "DJF",
                            "DKK",
                            "DOP",
                            "DZD",
                            "EGP",
                            "ERN",
                            "ETB",
                            "EUR",
                            "FJD",
                            "FKP",
                            "GBP",
                            "GEL",
                            "GHS",
                            "GIP",
                            "GMD",
                            "GNF",
                            "GTQ",
                            "GYD",
                            "HKD",
                            "HNL",
                            "HRK",
                            "HTG",
                            "HUF",
                            "IDR",
                            "ILS",
                            "INR",
                            "IQD",
                            "IRR",
                            "ISK",
                            "JMD",
                            "JOD",
                            "JPY",
                            "KES",
                            "KGS",
                            "KHR",
                            "KMF",
                            "KPW",
                            "KRW",
                            "KWD",
                            "KYD",
                            "KZT",
                            "LAK",
                            "LBP",
                            "LKR",
                            "LRD",
                            "LSL",
                            "LYD",
                            "MAD",
                            "MDL",
                            "MGA",
                            "MKD",
                            "MMK",
                            "MNT",
                            "MOP",
                            "MRU",
                            "MUR",
                            "MVR",
                            "MWK",
                            "MXN",
                            "MXV",
                            "MYR",
                            "MZN",
                            "NAD",
                            "NGN",
                            "NIO",
                            "NOK",
                            "NPR",
                            "NZD",
                            "OMR",
                            "PAB",
                            "PEN",
                            "PGK",
                            "PHP",
                            "PKR",
                            "PLN",
                            "PYG",
                            "QAR",
                            "RON",
                            "RSD",
                            "RUB",
                            "RWF",
                            "SAR",
                            "SBD",
                            "SCR",
                            "SDG",
                            "SEK",
                            "SGD",
                            "SHP",
                            "SLE",
                            "SLL",
                            "SOS",
                            "SRD",
                            "SSP",
                            "STN",
                            "SVC",
                            "SYP",
                            "SZL",
                            "THB",
                            "TJS",
                            "TMT",
                            "TND",
                            "TOP",
                            "TRY",
                            "TTD",
                            "TWD",
                            "TZS",
                            "UAH",
                            "UGX",
                            "USD",
                            "USN",
                            "UYI",
                            "UYU",
                            "UYW",
                            "UZS",
                            "VED",
                            "VES",
                            "VND",
                            "VUV",
                            "WST",
                            "XAF",
                            "XCD",
                            "XOF",
                            "XPF",
                            "XSU",
                            "XUA",
                            "YER",
                            "ZAR",
                            "ZMW",
                            "ZWL"
                        ],
                        "maxLength": 3,
                        "minLength": 3,
                        "title": "Currency",
                        "description": "Currency of the product"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Description",
                        "description": "Description of the product",
                        "example": "High-quality gardening tools"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 512,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the product",
                        "example": "Garden Tool Set"
                    },
                    "shippable": {
                        "type": "boolean",
                        "title": "Shippable",
                        "description": "Product is shippable or not. Service is not shippable",
                        "default": false
                    },
                    "features": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Features",
                        "description": "List of features of the product"
                    },
                    "scheduleAppointment": {
                        "type": "boolean",
                        "title": "Scheduleappointment",
                        "description": "Product requires appointment scheduling or not",
                        "default": false
                    },
                    "props": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Props",
                        "description": "Properties of the product",
                        "example": "stainless steel"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "uniqueItems": true
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags",
                        "description": "Tags for the product. This is used for grouping purpose. Eg: [\"gardening\", \"tools\"]",
                        "example": "gardening"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "agentIds": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agentids",
                        "description": "List of agent ids which are accessible for this product"
                    }
                },
                "type": "object",
                "required": [
                    "active",
                    "defaultPrice",
                    "currency",
                    "description",
                    "name",
                    "status"
                ],
                "title": "Product"
            },
            "Product-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "Product is active or not",
                        "default": false
                    },
                    "defaultPrice": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Defaultprice",
                        "description": "Default price of the product this is represented in the lowest currency denomination. Eg: 1000 for $10"
                    },
                    "currency": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Currency"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 256,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of the product"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Name of the product"
                    },
                    "shippable": {
                        "type": "boolean",
                        "title": "Shippable",
                        "description": "Product is shippable or not. Service is not shippable",
                        "default": false
                    },
                    "features": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Features",
                        "description": "List of features of the product"
                    },
                    "scheduleAppointment": {
                        "type": "boolean",
                        "title": "Scheduleappointment",
                        "description": "Product requires appointment scheduling or not",
                        "default": false
                    },
                    "props": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Props",
                        "description": "Properties of the product"
                    },
                    "tags": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "uniqueItems": true
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Tags"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "Product",
                "description": "Product and services offered by the business"
            },
            "Prospect-Input": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name",
                        "description": "Name of the prospect",
                        "example": "John Doe"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1,
                                "format": "email"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email",
                        "description": "Email of the prospect",
                        "example": "john.doe@example.com"
                    },
                    "phoneNumber": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phonenumber",
                        "description": "Phone number of the prospect",
                        "example": "1234567890"
                    },
                    "externalReference": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ExternalReference"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Externalreference",
                        "description": "External references for the prospect"
                    },
                    "status": {
                        "$ref": "#/components/schemas/ProspectStatus"
                    },
                    "prospectProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prospectprops",
                        "description": "Props for the prospect",
                        "example": "software"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "Prospect"
            },
            "Prospect-Output": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "email": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Email"
                    },
                    "phoneNumber": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phonenumber"
                    },
                    "externalReference": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/ExternalReference"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Externalreference"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "prospectProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Prospectprops"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "externalReference",
                    "status",
                    "prospectProps"
                ],
                "title": "Prospect",
                "description": "Prospects are the potential customers for business"
            },
            "ProspectStatus": {
                "type": "string",
                "enum": [
                    "NEW",
                    "GENERAL_ENQUIRY",
                    "SCHEDULED_CALLBACK_WITH_BOT",
                    "SCHEDULED_APPOINTMENT_WITH_PERSON",
                    "SCHEDULED_APPOINTMENT_FOR_SERVICE",
                    "NOT_INTERESTED",
                    "PRODUCT_ORDER_PLACED",
                    "SERVICE_ORDER_PLACED"
                ],
                "title": "ProspectStatus"
            },
            "Sequence": {
                "properties": {
                    "stageName": {
                        "type": "string",
                        "maxLength": 1024,
                        "minLength": 1,
                        "title": "Stagename",
                        "description": "Name of the stage",
                        "example": "Introduction"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 4096,
                        "minLength": 1,
                        "title": "Description",
                        "description": "Description of the stage",
                        "example": "This stage involves introducing the AI agent to the user and explaining the purpose of the call."
                    },
                    "otherNotes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 4096,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Othernotes",
                        "description": "Other notes that AI agent should know in this stage of conversation",
                        "example": "Ensure the user understands the privacy policy."
                    }
                },
                "type": "object",
                "required": [
                    "stageName",
                    "description"
                ],
                "title": "Sequence"
            },
            "SortOrder": {
                "type": "string",
                "enum": [
                    "asc",
                    "desc"
                ],
                "title": "SortOrder"
            },
            "StatsData": {
                "properties": {
                    "no_of_prospects": {
                        "type": "integer",
                        "title": "No Of Prospects"
                    },
                    "appointment_scheduled": {
                        "type": "integer",
                        "title": "Appointment Scheduled"
                    },
                    "unqualified": {
                        "type": "integer",
                        "title": "Unqualified"
                    },
                    "average_call_duration": {
                        "type": "number",
                        "title": "Average Call Duration"
                    }
                },
                "type": "object",
                "required": [
                    "no_of_prospects",
                    "appointment_scheduled",
                    "unqualified",
                    "average_call_duration"
                ],
                "title": "StatsData"
            },
            "StatsResponse": {
                "properties": {
                    "response": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StatsData"
                            }
                        ],
                        "description": "Overall stats of prospects"
                    }
                },
                "type": "object",
                "required": [
                    "response"
                ],
                "title": "StatsResponse"
            },
            "Status": {
                "type": "string",
                "enum": [
                    "active",
                    "inactive"
                ],
                "title": "Status"
            },
            "Transcriber": {
                "properties": {
                    "providerName": {
                        "type": "string",
                        "title": "Providername"
                    },
                    "transcriberModel": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Transcribermodel"
                    },
                    "providerProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Providerprops"
                    }
                },
                "type": "object",
                "title": "Transcriber"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "Voice-Input": {
                "properties": {
                    "gender": {
                        "type": "string",
                        "enum": [
                            "Male",
                            "Female",
                            "Neutral"
                        ],
                        "title": "Gender"
                    },
                    "languageAccent": {
                        "$ref": "#/components/schemas/LanguageAccentCombo"
                    },
                    "modelId": {
                        "type": "string",
                        "title": "Modelid"
                    }
                },
                "type": "object",
                "required": [
                    "gender",
                    "languageAccent",
                    "modelId"
                ],
                "title": "Voice"
            },
            "Voice-Output": {
                "properties": {
                    "gender": {
                        "type": "string",
                        "enum": [
                            "Male",
                            "Female",
                            "Neutral"
                        ],
                        "title": "Gender"
                    },
                    "languageAccent": {
                        "$ref": "#/components/schemas/LanguageAccentCombo"
                    },
                    "modelId": {
                        "type": "string",
                        "title": "Modelid"
                    }
                },
                "type": "object",
                "required": [
                    "gender",
                    "languageAccent",
                    "modelId"
                ],
                "title": "Voice"
            },
            "VoiceModel": {
                "properties": {
                    "voice": {
                        "$ref": "#/components/schemas/Voice-Output"
                    },
                    "previewUrl": {
                        "type": "string",
                        "title": "Previewurl"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "voiceDescription": {
                        "type": "string",
                        "title": "Voicedescription"
                    }
                },
                "type": "object",
                "required": [
                    "voice",
                    "previewUrl",
                    "name",
                    "voiceDescription"
                ],
                "title": "VoiceModel"
            },
            "backend__db__models__Action": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "orgId": {
                        "type": "string",
                        "title": "Orgid"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "parameters": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parameters"
                    },
                    "endpoint": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Endpoint"
                    },
                    "invocationTrigger": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Invocationtrigger"
                    },
                    "userWaitingText": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Userwaitingtext"
                    },
                    "userSuccessText": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Usersuccesstext"
                    },
                    "userErrorText": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Usererrortext"
                    },
                    "createdBy": {
                        "type": "string",
                        "title": "Createdby"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Createdat"
                    },
                    "updatedBy": {
                        "type": "string",
                        "title": "Updatedby"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updatedat"
                    }
                },
                "type": "object",
                "title": "Action",
                "description": "Action entity to store the actions which can be performed by ai agents"
            },
            "backend__db__models__HiveContent": {
                "properties": {
                    "hiveType": {
                        "$ref": "#/components/schemas/HiveType"
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL of the content"
                    },
                    "files": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/Files"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Files",
                        "description": "List of files to be referenced for the hive"
                    },
                    "hiveProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hiveprops",
                        "description": "To recursively crawl child pages, add this as props {\"crawl_child_pages\": true},  \"depth\": \"3\""
                    },
                    "internalProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Internalprops",
                        "description": "To add any internal props, add this as props {\"last_crawl_time\": \"123123123123\"}"
                    }
                },
                "type": "object",
                "required": [
                    "hiveType"
                ],
                "title": "HiveContent"
            },
            "backend__dto__models__HiveContent": {
                "properties": {
                    "hiveType": {
                        "$ref": "#/components/schemas/HiveType"
                    },
                    "url": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 512,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Url",
                        "description": "URL of the content"
                    },
                    "file_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "File Ids",
                        "description": "List of file ids to be referenced for the hive"
                    },
                    "hiveProps": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Hiveprops",
                        "description": "To recursively crawl child pages, add this as props {\"crawl_child_pages\": true},  \"depth\": \"3\""
                    }
                },
                "type": "object",
                "required": [
                    "hiveType"
                ],
                "title": "HiveContent"
            }
        },
        "securitySchemes": {
            "HTTPBearer": {
                "type": "http",
                "scheme": "bearer"
            }
        }
    }
}
